sensor:
  - platform: dewpoint
    sensors:
      dewpoint_outside:
        temperature: sensor.acurite_outside_temperature
        rel_hum: sensor.acurite_outside_humidity

  - platform: template
    sensors:
      pws_url:
        value_template: !secret pws_url

      press_in:
        unit_of_measurement: in
        value_template: "{{ (states('sensor.aquara_den_pressure') | float(none) * 0.02953) | round(2, default=none) }}"

      sunlight_pct:
        value_template: >-
          {%- set elevation = state_attr('sun.sun','elevation') | float(none) %}
          {%- set cloud_coverage = states('sensor.dark_sky_cloud_coverage') | float(none) %}
          {%- set cloud_factor = (1 - (0.75 * ( cloud_coverage / 100) ** 3 )) %}
          {%- set min_elevation = -6 %}
          {%- set max_elevation = 90 %}
          {%- set adjusted_elevation = elevation - min_elevation %}
          {%- set adjusted_elevation = [adjusted_elevation,0] | max %}
          {%- set adjusted_elevation = [adjusted_elevation,max_elevation - min_elevation] | min %}
          {%- set adjusted_elevation = adjusted_elevation / (max_elevation - min_elevation) %}
          {%- set adjusted_elevation = adjusted_elevation %}
          {%- set adjusted_elevation = adjusted_elevation * 100 %}
          {%- set brightness = adjusted_elevation * cloud_factor %}
          {{ brightness | round(0, default=none) }}
        unit_of_measurement: "%"
        device_class: "illuminance"

      weather_description:
        value_template: >-
          {% if is_state('input_boolean.is_raining','on') -%}
            {{ states('sensor.openweathermap_current_weather_alerts') }}  Rain now.  {{ states('sensor.openweathermap_weekly_summary') }}
          {% else -%}
          {{ states('sensor.openweathermap_current_weather_alerts') }}  {{ states('sensor.openweathermap_weekly_summary') }}
          {% endif -%}

      clean_precip_intensity:
        value_template: "{{ states('sensor.dark_sky_precip_intensity') | round(2, default=none) }}"
      
      local_apparent_temperature:
        value_template: >-
          {% set temp = (states('sensor.acurite_outside_temperature') | float(0) - 32) * (5/9) %}
          {% set ws = states('sensor.openweathermap_current_wind_speed') | float(0) / 2.237 %}
          {% set p = (states('sensor.acurite_outside_humidity') | float(0) / 100) * 6.105 * e**((17.27 * temp) / (237.7 + temp)) %}
          {% set atc = temp + (0.33 * p) - (0.70 * ws) - 4 %}
          {% set at = (atc * (9/5)) + 32 %}
          {{ at }}
        unit_of_measurement: "°F"
        device_class: temperature

      temp_high_overall:
        value_template: "{{ states('sensor.temp_high_overall') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_low_overall:
        value_template: "{{ states('sensor.temp_low_overall') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_high_day:
        value_template: "{{ states('sensor.temp_high_day') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_low_day:
        value_template: "{{ states('sensor.temp_low_day') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_high_week:
        value_template: "{{ states('sensor.temp_high_week') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_low_week:
        value_template: "{{ states('sensor.temp_low_week') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_high_month:
        value_template: "{{ states('sensor.temp_high_month') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_low_month:
        value_template: "{{ states('sensor.temp_low_month') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_high_year:
        value_template: "{{ states('sensor.temp_high_year') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_low_year:
        value_template: "{{ states('sensor.temp_low_year') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_high_month_1:
        value_template: "{{ states('sensor.temp_high_month_1') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_low_month_1:
        value_template: "{{ states('sensor.temp_low_month_1') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_high_month_2:
        value_template: "{{ states('sensor.temp_high_month_2') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_low_month_2:
        value_template: "{{ states('sensor.temp_low_month_2') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_high_month_3:
        value_template: "{{ states('sensor.temp_high_month_3') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_low_month_3:
        value_template: "{{ states('sensor.temp_low_month_3') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_high_month_4:
        value_template: "{{ states('sensor.temp_high_month_4') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_low_month_4:
        value_template: "{{ states('sensor.temp_low_month_4') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_high_month_5:
        value_template: "{{ states('sensor.temp_high_month_5') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_low_month_5:
        value_template: "{{ states('sensor.temp_low_month_5') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_high_month_6:
        value_template: "{{ states('sensor.temp_high_month_6') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_low_month_6:
        value_template: "{{ states('sensor.temp_low_month_6') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_high_month_7:
        value_template: "{{ states('sensor.temp_high_month_7') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_low_month_7:
        value_template: "{{ states('sensor.temp_low_month_7') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_high_month_8:
        value_template: "{{ states('sensor.temp_high_month_8') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_low_month_8:
        value_template: "{{ states('sensor.temp_low_month_8') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_high_month_9:
        value_template: "{{ states('sensor.temp_high_month_9') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_low_month_9:
        value_template: "{{ states('sensor.temp_low_month_9') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_high_month_10:
        value_template: "{{ states('sensor.temp_high_month_10') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_low_month_10:
        value_template: "{{ states('sensor.temp_low_month_10') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_high_month_11:
        value_template: "{{ states('sensor.temp_high_month_11') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_low_month_11:
        value_template: "{{ states('sensor.temp_low_month_11') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_high_month_12:
        value_template: "{{ states('sensor.temp_high_month_12') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

      temp_low_month_12:
        value_template: "{{ states('sensor.temp_low_month_12') |int(float) | round(1, default=none) }}"
        unit_of_measurement: "°F"
        device_class: temperature

  # Darksky
  - platform: darksky
    api_key: !secret ds_key
    forecast:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
    monitored_conditions:
      - icon
      - summary
      - nearest_storm_distance
      - nearest_storm_bearing
      - humidity
      - temperature
      - temperature_high
      - temperature_low
      - apparent_temperature
      - apparent_temperature_high
      - apparent_temperature_low
      - wind_speed
      - wind_bearing
      - precip_type
      - precip_probability
      - precip_accumulation
      - precip_intensity
      - precip_intensity_max
      - uv_index
      - daily_summary
      - pressure
      - visibility

mqtt:
  sensor:
    - name: Bear Creek Elevation
      state_topic: "hcfws/elevation"
      unit_of_measurement: "ft"
    - name: Bear Creek Rain This Hour
      state_topic: "hcfws/rain/current"
      unit_of_measurement: "in"
    - name: Bear Creek Rain Last Hour
      state_topic: "hcfws/rain/last"
      unit_of_measurement: "in"

    #OpenWeatherMap
    - name: OpenWeatherMap Current Icon
      state_topic: openweathermap
      value_template: "{{value_json['current'].icon }}"

    - name: OpenWeatherMap Current Summary
      state_topic: openweathermap
      value_template: "{{value_json['current'].summary }}"
      
    - name: OpenWeatherMap Current Temperature
      state_topic: openweathermap
      value_template: "{{value_json['current'].temperature }}"
      unit_of_measurement: "°F"
      device_class: temperature

    - name: OpenWeatherMap Current Visibility
      state_topic: openweathermap
      value_template: "{{value_json['current'].visibility }}"
      unit_of_measurement: "mi"

    - name: OpenWeatherMap Current Maximum Temperature
      state_topic: openweathermap
      value_template: "{{value_json['current'].maxtemp }}"
      unit_of_measurement: "°F"
      device_class: temperature

    - name: OpenWeatherMap Current Minimum Temperature
      state_topic: openweathermap
      value_template: "{{value_json['current'].mintemp }}"
      unit_of_measurement: "°F"  
      device_class: temperature

    - name: OpenWeatherMap Current Wind Bearing
      state_topic: openweathermap
      value_template: "{{value_json['current'].wind_dir }}"
      unit_of_measurement: "°"

    - name: OpenWeatherMap Current Wind Speed
      state_topic: openweathermap
      value_template: "{{value_json['current'].wind_spd }}"
      unit_of_measurement: "mi/h"

    - name: OpenWeatherMap Current Wind Gust
      state_topic: openweathermap
      value_template: "{{value_json['current'].wind_gust }}"
      unit_of_measurement: "mi/h"

    - name: OpenWeatherMap Current Humidity
      state_topic: openweathermap
      value_template: "{{value_json['current'].humidity }}"
      unit_of_measurement: "%"

    - name: OpenWeatherMap Current Pressure
      state_topic: openweathermap
      value_template: "{{value_json['current'].pressure }}"
      unit_of_measurement: "hPa"

    - name: OpenWeatherMap Current Apparent Temperature
      state_topic: openweathermap
      value_template: "{{value_json['current'].apparent }}"
      unit_of_measurement: "°F"

      device_class: temperature
    - name: OpenWeatherMap Current POP
      state_topic: openweathermap
      value_template: "{{value_json['current'].precip_chance }}"
      unit_of_measurement: "%"

    - name: OpenWeatherMap Current Precip Forecast
      state_topic: openweathermap
      value_template: "{{value_json['current'].precip_forecast }}"
      unit_of_measurement: "in"

    - name: OpenWeatherMap Current UV Index
      state_topic: openweathermap
      value_template: "{{value_json['current'].uv_index }}"

    - name: OpenWeatherMap Current UV Risk
      state_topic: openweathermap
      value_template: "{{value_json['current'].uv_risk }}"

    - name: OpenWeatherMap Current UV Combined
      state_topic: openweathermap
      value_template: "{{value_json['current'].uv_combined }}"

    - name: OpenWeatherMap Day 1 Icon
      state_topic: openweathermap
      value_template: "{{value_json['day_1'].icon }}"

    - name: OpenWeatherMap Day 1 Summary
      state_topic: openweathermap
      value_template: "{{value_json['day_1'].summary }}"

    - name: OpenWeatherMap Day 1 Maximum Temperature
      state_topic: openweathermap
      value_template: "{{value_json['day_1'].maxtemp }}"
      unit_of_measurement: "°F"
      device_class: temperature

    - name: OpenWeatherMap Day 1 Minimum Temperature
      state_topic: openweathermap
      value_template: "{{value_json['day_1'].mintemp }}"
      unit_of_measurement: "°F" 
      device_class: temperature 
      
    - name: OpenWeatherMap Day 1 POP
      state_topic: openweathermap
      value_template: "{{value_json['day_1'].precip_chance }}"
      unit_of_measurement: "%"

    - name: OpenWeatherMap Day 1 Precip Forecast
      state_topic: openweathermap
      value_template: "{{value_json['day_1'].precip_forecast }}"
      unit_of_measurement: "in"

    - name: OpenWeatherMap Day 2 Icon
      state_topic: openweathermap
      value_template: "{{value_json['day_2'].icon }}"

    - name: OpenWeatherMap Day 2 Summary
      state_topic: openweathermap
      value_template: "{{value_json['day_2'].summary }}"

    - name: OpenWeatherMap Day 2 Maximum Temperature
      state_topic: openweathermap
      value_template: "{{value_json['day_2'].maxtemp }}"
      unit_of_measurement: "°F"
      device_class: temperature

    - name: OpenWeatherMap Day 2 Minimum Temperature
      state_topic: openweathermap
      value_template: "{{value_json['day_2'].mintemp }}"
      unit_of_measurement: "°F" 
      device_class: temperature 

    - name: OpenWeatherMap Day 2 POP
      state_topic: openweathermap
      value_template: "{{value_json['day_2'].precip_chance }}"
      unit_of_measurement: "%"

    - name: OpenWeatherMap Day 2 Precip Forecast
      state_topic: openweathermap
      value_template: "{{value_json['day_2'].precip_forecast }}"
      unit_of_measurement: "in"

    - name: OpenWeatherMap Day 3 Icon
      state_topic: openweathermap
      value_template: "{{value_json['day_3'].icon }}"

    - name: OpenWeatherMap Day 3 Summary
      state_topic: openweathermap
      value_template: "{{value_json['day_3'].summary }}"

    - name: OpenWeatherMap Day 3 Maximum Temperature
      state_topic: openweathermap
      value_template: "{{value_json['day_3'].maxtemp }}"
      unit_of_measurement: "°F"
      device_class: temperature

    - name: OpenWeatherMap Day 3 Minimum Temperature
      state_topic: openweathermap
      value_template: "{{value_json['day_3'].mintemp }}"
      unit_of_measurement: "°F"  
      device_class: temperature

    - name: OpenWeatherMap Day 3 POP
      state_topic: openweathermap
      value_template: "{{value_json['day_3'].precip_chance }}"
      unit_of_measurement: "%"

    - name: OpenWeatherMap Day 3 Precip Forecast
      state_topic: openweathermap
      value_template: "{{value_json['day_3'].precip_forecast }}"
      unit_of_measurement: "in"

    - name: OpenWeatherMap Day 4 Icon
      state_topic: openweathermap
      value_template: "{{value_json['day_4'].icon }}"

    - name: OpenWeatherMap Day 4 Summary
      state_topic: openweathermap
      value_template: "{{value_json['day_4'].summary }}"

    - name: OpenWeatherMap Day 4 Maximum Temperature
      state_topic: openweathermap
      value_template: "{{value_json['day_4'].maxtemp }}"
      unit_of_measurement: "°F"
      device_class: temperature

    - name: OpenWeatherMap Day 4 Minimum Temperature
      state_topic: openweathermap
      value_template: "{{value_json['day_4'].mintemp }}"
      unit_of_measurement: "°F"  
      device_class: temperature

    - name: OpenWeatherMap Day 4 POP
      state_topic: openweathermap
      value_template: "{{value_json['day_4'].precip_chance }}"
      unit_of_measurement: "%"

    - name: OpenWeatherMap Day 4 Precip Forecast
      state_topic: openweathermap
      value_template: "{{value_json['day_4'].precip_forecast }}"
      unit_of_measurement: "in"

    - name: OpenWeatherMap Day 5 Icon
      state_topic: openweathermap
      value_template: "{{value_json['day_5'].icon }}"

    - name: OpenWeatherMap Day 5 Summary
      state_topic: openweathermap
      value_template: "{{value_json['day_5'].summary }}"

    - name: OpenWeatherMap Day 5 Maximum Temperature
      state_topic: openweathermap
      value_template: "{{value_json['day_5'].maxtemp }}"
      unit_of_measurement: "°F"
      device_class: temperature

    - name: OpenWeatherMap Day 5 Minimum Temperature
      state_topic: openweathermap
      value_template: "{{value_json['day_5'].mintemp }}"
      unit_of_measurement: "°F"  
      device_class: temperature

    - name: OpenWeatherMap Day 5 POP
      state_topic: openweathermap
      value_template: "{{value_json['day_5'].precip_chance }}"
      unit_of_measurement: "%"

    - name: OpenWeatherMap Day 5 Precip Forecast
      state_topic: openweathermap
      value_template: "{{value_json['day_5'].precip_forecast }}"
      unit_of_measurement: "in"

    - name: OpenWeatherMap Current Weather Alerts
      state_topic: openweathermap
      value_template: "{{value_json['alerts'] }}"

    - name: OpenWeatherMap Weekly Summary
      state_topic: openweathermap
      value_template: "{{value_json['summary'] }}"

    - name: KTME Current Visibility
      state_topic: weather/ktme/visibility
      unit_of_measurement: "mi"

rest_command:
  update_wunderground:
    url: "{{ states('sensor.pws_url') }}tempf={{ states('sensor.acurite_outside_temperature') }}&humidity={{ states('sensor.acurite_outside_humidity') }}&dewptf={{ states('sensor.dewpoint_outside') }}&baromin={{ states('sensor.press_in') }}&rainin={{ states('sensor.rain_rate') }}&dailyrainin={{ states('sensor.rain_day') }}&action=updateraw"

input_boolean:
  is_raining:
    name: Currently Raining

input_number:
  temp_high_overall:
    min: -50
    max: 150
    mode: box
  temp_low_overall:
    min: -50
    max: 150
    mode: box
  temp_high_day:
    min: -50
    max: 150
    mode: box
  temp_low_day:
    min: -50
    max: 150
    mode: box
  temp_high_week:
    min: -50
    max: 150
    mode: box
  temp_low_week:
    min: -50
    max: 150
    mode: box
  temp_high_month:
    min: -50
    max: 150
    mode: box
  temp_low_month:
    min: -50
    max: 150
    mode: box
  temp_high_year:
    min: -50
    max: 150
    mode: box
  temp_low_year:
    min: -50
    max: 150
    mode: box
  temp_high_month_1:
    min: -50
    max: 150
    mode: box
  temp_low_month_1:
    min: -50
    max: 150
    mode: box
  temp_high_month_2:
    min: -50
    max: 150
    mode: box
  temp_low_month_2:
    min: -50
    max: 150
    mode: box
  temp_high_month_3:
    min: -50
    max: 150
    mode: box
  temp_low_month_3:
    min: -50
    max: 150
    mode: box
  temp_high_month_4:
    min: -50
    max: 150
    mode: box
  temp_low_month_4:
    min: -50
    max: 150
    mode: box
  temp_high_month_5:
    min: -50
    max: 150
    mode: box
  temp_low_month_5:
    min: -50
    max: 150
    mode: box
  temp_high_month_6:
    min: -50
    max: 150
    mode: box
  temp_low_month_6:
    min: -50
    max: 150
    mode: box
  temp_high_month_7:
    min: -50
    max: 150
    mode: box
  temp_low_month_7:
    min: -50
    max: 150
    mode: box
  temp_high_month_8:
    min: -50
    max: 150
    mode: box
  temp_low_month_8:
    min: -50
    max: 150
    mode: box
  temp_high_month_9:
    min: -50
    max: 150
    mode: box
  temp_low_month_9:
    min: -50
    max: 150
    mode: box
  temp_high_month_10:
    min: -50
    max: 150
    mode: box
  temp_low_month_10:
    min: -50
    max: 150
    mode: box
  temp_high_month_11:
    min: -50
    max: 150
    mode: box
  temp_low_month_11:
    min: -50
    max: 150
    mode: box
  temp_high_month_12:
    min: -50
    max: 150
    mode: box
  temp_low_month_12:
    min: -50
    max: 150
    mode: box
  temp_high_last_day:
    min: -50
    max: 150
    mode: box
  temp_low_last_day:
    min: -50
    max: 150
    mode: box
  temp_high_last_week:
    min: -50
    max: 150
    mode: box
  temp_low_last_week:
    min: -50
    max: 150
    mode: box
  temp_high_last_month:
    min: -50
    max: 150
    mode: box
  temp_low_last_month:
    min: -50
    max: 150
    mode: box
  temp_high_last_year:
    min: -50
    max: 150
    mode: box
  temp_low_last_year:
    min: -50
    max: 150
    mode: box

input_text:
  temp_high_date_overall:
    name: Overall High Temp Date
  temp_low_date_overall:
    name: Overall Low Temp Date
  temp_high_date_day:
    name: Day High Temp Date
  temp_low_date_day:
    name: Day Low Temp Date
  temp_high_date_week:
    name: Week High Temp Date
  temp_low_date_week:
    name: Week Low Temp Date
  temp_high_date_month:
    name: Month High Temp Date
  temp_low_date_month:
    name: Month Low Temp Date
  temp_high_date_year:
    name: Year High Temp Date
  temp_low_date_year:
    name: Year Low Temp Date
  temp_high_date_month_1:
    name: Month 1 High Temp Date
  temp_low_date_month_1:
    name: Month 1 Low Temp Date
  temp_high_date_month_2:
    name: Month 2 High Temp Date
  temp_low_date_month_2:
    name: Month 2 Low Temp Date
  temp_high_date_month_3:
    name: Month 3 High Temp Date
  temp_low_date_month_3:
    name: Month 3 Low Temp Date
  temp_high_date_month_4:
    name: Month 4 High Temp Date
  temp_low_date_month_4:
    name: Month 4 Low Temp Date
  temp_high_date_month_5:
    name: Month 5 High Temp Date
  temp_low_date_month_5:
    name: Month 5 Low Temp Date
  temp_high_date_month_6:
    name: Month 6 High Temp Date
  temp_low_date_month_6:
    name: Month 6 Low Temp Date
  temp_high_date_month_7:
    name: Month 7 High Temp Date
  temp_low_date_month_7:
    name: Month 7 Low Temp Date
  temp_high_date_month_8:
    name: Month 8 High Temp Date
  temp_low_date_month_8:
    name: Month 8 Low Temp Date
  temp_high_date_month_9:
    name: Month 9 High Temp Date
  temp_low_date_month_9:
    name: Month 9 Low Temp Date
  temp_high_date_month_10:
    name: Month 10 High Temp Date
  temp_low_date_month_10:
    name: Month 10 Low Temp Date
  temp_high_date_month_11:
    name: Month 11 High Temp Date
  temp_low_date_month_11:
    name: Month 11 Low Temp Date
  temp_high_date_month_12:
    name: Month 12 High Temp Date
  temp_low_date_month_12:
    name: Month 12 Low Temp Date
  temp_high_date_last_day:
    name: Last Day High Temp Date
  temp_low_date_last_day:
    name: Last Day Low Temp Date
  temp_high_date_last_week:
    name: Last Week High Temp Date
  temp_low_date_last_week:
    name: Last Week Low Temp Date
  temp_high_date_last_month:
    name: Last Month High Temp Date
  temp_low_date_last_month:
    name: Last Month Low Temp Date
  temp_high_date_last_year:
    name: Last Year High Temp Date
  temp_low_date_last_year:
    name: Last Year Low Temp Date

automation:
  - alias: Update Temperature Records
    id: 005ecdaf-0900-447c-b13f-f1f6730ab6cb
    trigger:
      - platform: state
        entity_id: sensor.acurite_outside_temperature
    action:
      - choose: #Overall high temperature
        - conditions:
          - condition: template
            value_template: "{{ states('sensor.acurite_outside_temperature') | float(none) > states('input_number.temp_high_overall') | float(none) }}"
          sequence:
            - service: input_number.set_value
              entity_id: input_number.temp_high_overall
              data_template:
                value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
            - service: input_text.set_value
              entity_id: input_text.temp_high_date_overall
              data_template:
                value: "{{ now() }}"
      - choose: #Overall low temperature
        - conditions:
          - condition: template
            value_template: "{{ states('sensor.acurite_outside_temperature') | float(none) < states('input_number.temp_low_overall') | float(none) }}"
          sequence:
            - service: input_number.set_value
              entity_id: input_number.temp_low_overall
              data_template:
                value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
            - service: input_text.set_value
              entity_id: input_text.temp_low_date_overall
              data_template:
                value: "{{ now() }}"
      - choose: #Day high temperature
        - conditions:
          - condition: template
            value_template: "{{ states('sensor.acurite_outside_temperature') | float(none) > states('input_number.temp_high_day') | float(none) }}"
          sequence:
            - service: input_number.set_value
              entity_id: input_number.temp_high_day
              data_template:
                value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
            - service: input_text.set_value
              entity_id: input_text.temp_high_date_day
              data_template:
                value: "{{ now() }}"
      - choose: #Day low temperature
        - conditions:
          - condition: template
            value_template: "{{ states('sensor.acurite_outside_temperature') | float(none) < states('input_number.temp_low_day') | float(none) }}"
          sequence:
            - service: input_number.set_value
              entity_id: input_number.temp_low_day
              data_template:
                value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
            - service: input_text.set_value
              entity_id: input_text.temp_low_date_day
              data_template:
                value: "{{ now() }}"
      - choose: #Week high temperature
        - conditions:
          - condition: template
            value_template: "{{ states('sensor.acurite_outside_temperature') | float(none) > states('input_number.temp_high_week') | float(none) }}"
          sequence:
            - service: input_number.set_value
              entity_id: input_number.temp_high_week
              data_template:
                value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
            - service: input_text.set_value
              entity_id: input_text.temp_high_date_week
              data_template:
                value: "{{ now() }}"
      - choose: #Week low temperature
        - conditions:
          - condition: template
            value_template: "{{ states('sensor.acurite_outside_temperature') | float(none) < states('input_number.temp_low_week') | float(none) }}"
          sequence:
            - service: input_number.set_value
              entity_id: input_number.temp_low_week
              data_template:
                value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
            - service: input_text.set_value
              entity_id: input_text.temp_low_date_week
              data_template:
                value: "{{ now() }}"
      - choose: #Month high temperature
        - conditions:
          - condition: template
            value_template: "{{ states('sensor.acurite_outside_temperature') | float(none) > states('input_number.temp_high_month') | float(none) }}"
          sequence:
            - service: input_number.set_value
              entity_id: input_number.temp_high_month
              data_template:
                value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
            - service: input_number.set_value
              data_template:
                entity_id: >
                  input_number.temp_high_month_{{ now().month }}
                value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
            - service: input_text.set_value
              entity_id: input_text.temp_high_date_month
              data_template:
                value: "{{ now() }}"
            - service: input_text.set_value
              data_template:
                entity_id: >
                  input_text.temp_high_date_month_{{ now().month }}
                value: "{{ now() }}"
      - choose: #Month low temperature
        - conditions:
          - condition: template
            value_template: "{{ states('sensor.acurite_outside_temperature') | float(none) < states('input_number.temp_low_month') | float(none) }}"
          sequence:
            - service: input_number.set_value
              entity_id: input_number.temp_low_month
              data_template:
                value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
            - service: input_number.set_value
              data_template:
                entity_id: >
                  input_number.temp_low_month_{{ now().month }}
                value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
            - service: input_text.set_value
              entity_id: input_text.temp_low_date_month
              data_template:
                value: "{{ now() }}"
            - service: input_text.set_value
              data_template:
                entity_id: >
                  input_text.temp_low_date_month_{{ now().month }}
                value: "{{ now() }}"      
      - choose: #Year high temperature
        - conditions:
          - condition: template
            value_template: "{{ states('sensor.acurite_outside_temperature') | float(none) > states('input_number.temp_high_year') | float(none) }}"
          sequence:
            - service: input_number.set_value
              entity_id: input_number.temp_high_year
              data_template:
                value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
            - service: input_text.set_value
              entity_id: input_text.temp_high_date_year
              data_template:
                value: "{{ now() }}"
      - choose: #Year low temperature
        - conditions:
          - condition: template
            value_template: "{{ states('sensor.acurite_outside_temperature') | float(none) < states('input_number.temp_low_year') | float(none) }}"
          sequence:
            - service: input_number.set_value
              entity_id: input_number.temp_low_year
              data_template:
                value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
            - service: input_text.set_value
              entity_id: input_text.temp_low_date_year
              data_template:
                value: "{{ now() }}"

  - alias: Reset Day Temperature
    id: 3741aeac-88e7-45db-b91a-fa032d372f08
    trigger:
      - platform: time
        at: "00:00:00"
    action:
      - service: input_number.set_value
        entity_id: input_number.temp_high_last_day
        data_template:
          value: "{{ states('input_number.temp_high_day') | float(none) }}"
      - service: input_number.set_value
        entity_id: input_number.temp_low_last_day
        data_template:
          value: "{{ states('input_number.temp_low_day') | float(none) }}"
      - service: input_number.set_value
        entity_id: input_number.temp_high_day
        data_template:
          value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
      - service: input_number.set_value
        entity_id: input_number.temp_low_day
        data_template:
          value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
      - service: input_text.set_value
        entity_id: input_text.temp_high_date_last_day
        data_template:
          value: "{{ states('input_text.temp_high_date_day') | string(none) }}"
      - service: input_text.set_value
        entity_id: input_text.temp_low_date_last_day
        data_template:
          value: "{{ states('input_text.temp_low_date_day') | string(none) }}"
      - service: input_text.set_value
        entity_id: input_text.temp_high_date_day
        data_template:
          value: "{{ now() }}"
      - service: input_text.set_value
        entity_id: input_text.temp_low_date_day
        data_template:
          value: "{{ now() }}"

  - alias: Reset Week Temperature
    id: d2ca1011-34fb-4d9d-8d60-aaefa6cfa32f
    trigger:
      - platform: time
        at: "00:00:00"
    condition:
      - condition: template
        value_template: "{{ now().weekday() == 0 }}"
    action:
      - service: input_number.set_value
        entity_id: input_number.temp_high_last_week
        data_template:
          value: "{{ states('input_number.temp_high_week') | float(none) }}"
      - service: input_number.set_value
        entity_id: input_number.temp_low_last_week
        data_template:
          value: "{{ states('input_number.temp_low_week') | float(none) }}"
      - service: input_number.set_value
        entity_id: input_number.temp_high_week
        data_template:
          value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
      - service: input_number.set_value
        entity_id: input_number.temp_low_week
        data_template:
          value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
      - service: input_text.set_value
        entity_id: input_text.temp_high_date_last_week
        data_template:
          value: "{{ states('input_text.temp_high_date_week') | string(none) }}"
      - service: input_text.set_value
        entity_id: input_text.temp_low_date_last_week
        data_template:
          value: "{{ states('input_text.temp_low_date_week') | string(none) }}"
      - service: input_text.set_value
        entity_id: input_text.temp_high_date_week
        data_template:
          value: "{{ now() }}"
      - service: input_text.set_value
        entity_id: input_text.temp_low_date_week
        data_template:
          value: "{{ now() }}"

  - alias: Reset Month Temperature
    id: 68064f64-7814-4fe6-9167-1f4bc724153a
    trigger:
      - platform: time
        at: "00:00:00"
    condition:
      - condition: template
        value_template: "{{ now().day == 1 }}"
    action:
      - service: input_number.set_value
        entity_id: input_number.temp_high_last_month
        data_template:
          value: "{{ states('input_number.temp_high_month') | float(none) }}"
      - service: input_number.set_value
        entity_id: input_number.temp_low_last_month
        data_template:
          value: "{{ states('input_number.temp_low_month') | float(none) }}"
      - service: input_number.set_value
        entity_id: input_number.temp_high_month
        data_template:
          value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
      - service: input_number.set_value
        entity_id: input_number.temp_low_month
        data_template:
          value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
      - service: input_text.set_value
        entity_id: input_text.temp_high_date_last_month
        data_template:
          value: "{{ states('input_text.temp_high_date_month') | string(none) }}"
      - service: input_text.set_value
        entity_id: input_text.temp_low_date_last_month
        data_template:
          value: "{{ states('input_text.temp_low_date_month') | string(none) }}"
      - service: input_number.set_value
        data_template:
          entity_id: >
            input_number.temp_high_month_{{ now().month }}
          value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
      - service: input_number.set_value
        data_template:
          entity_id: >
            input_number.temp_low_month_{{ now().month }}
          value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
      - service: input_text.set_value
        entity_id: input_text.temp_high_date_month
        data_template:
          value: "{{ now() }}"
      - service: input_text.set_value
        entity_id: input_text.temp_low_date_month
        data_template:
          value: "{{ now() }}"
      - service: input_text.set_value
        data_template:
          entity_id: >
            input_text.temp_high_date_month_{{ now().month }}
          value: "{{ now() }}"
      - service: input_text.set_value
        data_template:
          entity_id: >
            input_text.temp_low_date_month_{{ now().month }}
          value: "{{ now() }}" 

  - alias: Reset Year Temperature
    id: 86bdf918-9f26-4b71-87d0-5cadc1ec46c5
    trigger:
      - platform: time
        at: "00:00:00"
    condition:
      - condition: template
        value_template: "{{ now().month == 1 }}"
      - condition: template
        value_template: "{{ now().day == 1 }}"
    action:
      - service: input_number.set_value
        entity_id: input_number.temp_high_last_year
        data_template:
          value: "{{ states('input_number.temp_high_year') | float(none) }}"
      - service: input_number.set_value
        entity_id: input_number.temp_low_last_year
        data_template:
          value: "{{ states('input_number.temp_low_year') | float(none) }}"
      - service: input_number.set_value
        entity_id: input_number.temp_high_year
        data_template:
          value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
      - service: input_number.set_value
        entity_id: input_number.temp_low_year
        data_template:
          value: "{{ states('sensor.acurite_outside_temperature') | float(none) }}"
      - service: input_text.set_value
        entity_id: input_text.temp_high_date_last_year
        data_template:
          value: "{{ states('input_text.temp_high_date_year') | string(none) }}"
      - service: input_text.set_value
        entity_id: input_text.temp_low_date_last_year
        data_template:
          value: "{{ states('input_text.temp_low_date_year') | string(none) }}"
      - service: input_text.set_value
        entity_id: input_text.temp_high_date_year
        data_template:
          value: "{{ now() }}"
      - service: input_text.set_value
        entity_id: input_text.temp_low_date_year
        data_template:
          value: "{{ now() }}"