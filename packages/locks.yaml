binary_sensor:
  - platform: template
    sensors:
      front_door_lock_battery_low:
        unique_id: e1d0313f-1620-4204-8b2a-2a795626dc30
        value_template: "{{ states('sensor.front_door_lock_battery_level') | int(none) < 40 }}"
        friendly_name: "Front Door Lock Battery Low"
        delay_on:
          minutes: 5

      back_door_lock_battery_low:
        unique_id: 7e8da13e-ffe7-45a1-ac7d-45e0d7b1bb6e
        value_template: "{{ states('sensor.back_door_lock_battery_level') | int(none) < 40 }}"
        friendly_name: "Back Door Lock Battery Low"
        delay_on:
          minutes: 5

      garage_entry_lock_battery_low:
        unique_id: b216b903-9a51-40a5-a06c-752957623191
        value_template: "{{ states('sensor.garage_entry_lock_battery_level') | int(none) < 40 }}"
        friendly_name: "Garage Entry Lock Battery Low"
        delay_on:
          minutes: 5

      shed_door_lock_battery_low:
        unique_id: 8a835794-d8b2-4da1-bc6e-6d2090601b8b
        value_template: "{{ states('sensor.shed_door_lock_battery_level') | int(none) < 40 }}"
        friendly_name: "Shed Door Lock Battery Low"
        delay_on:
          minutes: 5

alert:
  front_door_lock_battery_low:
    name: Low Battery!
    entity_id: binary_sensor.front_door_lock_battery_low
    state: "on"
    repeat: 1440
    can_acknowledge: true
    skip_first: false
    message: "The front door lock battery is low."
    done_message: "The front door lock battery has been replaced."
    notifiers:
      - mobile_app_shawn_7t

  back_door_lock_battery_low:
    name: Low Battery!
    entity_id: binary_sensor.back_door_lock_battery_low
    state: "on"
    repeat: 1440
    can_acknowledge: true
    skip_first: false
    message: "The back door lock battery is low."
    done_message: "The back door lock battery has been replaced."
    notifiers:
      - mobile_app_shawn_7t

  garage_entry_lock_battery_low:
    name: Low Battery!
    entity_id: binary_sensor.garage_entry_lock_battery_low
    state: "on"
    repeat: 1440
    can_acknowledge: true
    skip_first: false
    message: "The garage entry lock battery is low."
    done_message: "The garage entry lock battery has been replaced."
    notifiers:
      - mobile_app_shawn_7t

  shed_door_lock_battery_low:
    name: Low Battery!
    entity_id: binary_sensor.shed_door_lock_battery_low
    state: "on"
    repeat: 1440
    can_acknowledge: true
    skip_first: false
    message: "The shed door lock battery is low."
    done_message: "The shed door lock battery has been replaced."
    notifiers:
      - mobile_app_shawn_7t

input_text:
  front_door_lock_status:
    name: Front Door Lock Status
  back_door_lock_status:
    name: Back Door Lock Status
  garage_entry_lock_status:
    name: Garage Entry Lock Status
  shed_door_lock_status:
    name: Shed Door Lock Status

sensor:
  - platform: template
    sensors:
      front_door_lock_status:
        unique_id: caabf583-c19a-4b69-9be7-cdd6f80a4978
        friendly_name: Front Door Lock Status
        value_template: "{{ states('input_text.front_door_lock_status') }}"

      back_door_lock_status:
        unique_id: e8c94281-d630-4f84-acc2-79bc0678fd25
        friendly_name: Back Door Lock Status
        value_template: "{{ states('input_text.back_door_lock_status') }}"

      garage_entry_lock_status:
        unique_id: 2c529f4f-f694-4be7-93bf-ef7a52ab05bc
        friendly_name: Garage Entry Lock Status
        value_template: "{{ states('input_text.garage_entry_lock_status') }}"

      shed_door_lock_status:
        unique_id: d9d31320-28a8-4494-a573-026a04c41a8a
        friendly_name: Shed Door Lock Status
        value_template: "{{ states('input_text.shed_door_lock_status') }}"

timer:
  front_door:
    name: Front Door Lock Timer
    duration: "00:05:00"

  back_door:
    name: Back Door Lock Timer
    duration: "00:05:00"

  garage_entry:
    name: Garage Entry Lock Timer
    duration: "00:05:00"

  shed_door:
    name: Shed Door Lock Timer
    duration: "04:00:00"

automation:
  - alias: 'Front Door Lock Status Update'
    id: ecaadffb-5b27-436c-b0c6-7ab409f08352
    trigger:
      - platform: event
        event_type: zwave_js_notification
    condition: "{{ trigger.event.data.device_id == '17752e4d4f06fc403e931c7b1ca21401' and trigger.event.data.event_label.endswith('lock operation') }}"
    action:
      - service: input_text.set_value
        data:
          entity_id: input_text.front_door_lock_status
          value: >
            {% set userID = trigger.event.data.parameters['userId'] %}
            {% if trigger.event.data.event_label == 'Manual unlock operation' %} Unlocked (Manual)
            {% elif trigger.event.data.event_label == 'Manual lock operation' %} Locked (Manual)
            {% elif trigger.event.data.event_label == 'RF unlock operation' %} Unlocked (RF)
            {% elif trigger.event.data.event_label == 'RF lock operation' %} Locked (RF)
            {% elif trigger.event.data.event_label == 'Keypad unlock operation' %} Unlocked (User {{ userID }})
            {% elif trigger.event.data.event_label == 'Keypad lock operation' %} Locked (Keypad)
            {% else %} Unknown
            {% endif %}

  - alias: 'Back Door Lock Status Update'
    id: 79b3e5fa-f37d-4de2-84a2-ba113fed9907
    trigger:
      - platform: event
        event_type: zwave_js_notification
    condition: "{{ trigger.event.data.device_id == '1663e6c964a6b7a1413df245cf4cb7e0' and trigger.event.data.event_label.endswith('lock operation') }}"
    action:
      - service: input_text.set_value
        data:
          entity_id: input_text.back_door_lock_status
          value: >
            {% set userID = trigger.event.data.parameters['userId'] %}
            {% if trigger.event.data.event_label == 'Manual unlock operation' %} Unlocked (Manual)
            {% elif trigger.event.data.event_label == 'Manual lock operation' %} Locked (Manual)
            {% elif trigger.event.data.event_label == 'RF unlock operation' %} Unlocked (RF)
            {% elif trigger.event.data.event_label == 'RF lock operation' %} Locked (RF)
            {% elif trigger.event.data.event_label == 'Keypad unlock operation' %} Unlocked (User {{ userID }})
            {% elif trigger.event.data.event_label == 'Keypad lock operation' %} Locked (Keypad)
            {% else %} Unknown
            {% endif %}

  - alias: 'Garage Entry Lock Status Update'
    id: a3395e80-00d6-433b-9b54-d9ff399e696e
    description: Update garage entry lock status.
    trigger:
      - platform: event
        event_type: zwave_js_notification
    condition: "{{ trigger.event.data.device_id == '98d579436e80e0c79ee235bbf9a1be11' and trigger.event.data.event_label.endswith('lock operation') }}"
    action:
      - service: input_text.set_value
        data:
          entity_id: input_text.garage_entry_lock_status
          value: >
            {% set userID = trigger.event.data.parameters['userId'] %}
            {% if trigger.event.data.event_label == 'Manual unlock operation' %} Unlocked (Manual)
            {% elif trigger.event.data.event_label == 'Manual lock operation' %} Locked (Manual)
            {% elif trigger.event.data.event_label == 'RF unlock operation' %} Unlocked (RF)
            {% elif trigger.event.data.event_label == 'RF lock operation' %} Locked (RF)
            {% elif trigger.event.data.event_label == 'Keypad unlock operation' %} Unlocked (User {{ userID }})
            {% elif trigger.event.data.event_label == 'Keypad lock operation' %} Locked (Keypad)
            {% else %} Unknown
            {% endif %}

  - alias: 'Shed Door Lock Status Update'
    id: ec794423-5457-4bb7-ab07-a260c64c0fc1
    trigger:
      - platform: event
        event_type: zwave_js_notification
    condition: "{{ trigger.event.data.device_id == '073a6a94a6e4bbe1f72cdd27b406591e' and trigger.event.data.event_label.endswith('lock operation') }}"
    action:
      - service: input_text.set_value
        data:
          entity_id: input_text.shed_door_lock_status
          value: >
            {% set userID = trigger.event.data.parameters['userId'] %}
            {% if trigger.event.data.event_label == 'Manual unlock operation' %} Unlocked (Manual)
            {% elif trigger.event.data.event_label == 'Manual lock operation' %} Locked (Manual)
            {% elif trigger.event.data.event_label == 'RF unlock operation' %} Unlocked (RF)
            {% elif trigger.event.data.event_label == 'RF lock operation' %} Locked (RF)
            {% elif trigger.event.data.event_label == 'Keypad unlock operation' %} Unlocked (User {{ userID }})
            {% elif trigger.event.data.event_label == 'Keypad lock operation' %} Locked (Keypad)
            {% else %} Unknown
            {% endif %}