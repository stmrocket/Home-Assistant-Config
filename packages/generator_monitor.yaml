sensor:
  - platform: mqtt
    name: Generator Current Firmware
    state_topic: "genset/tele/status"
    value_template: "{{value_json['currentFirmware']}}"

  - platform: mqtt
    name: Generator Latest Firmware
    state_topic: "genset/tele/status"
    value_template: "{{value_json['latestFirmware']}}"

  - platform: mqtt
    name: Generator Engine Speed
    state_topic: "genset/tele/status"
    value_template: "{{value_json['engineSpeed']}}"
    unit_of_measurement: "RPM"

  - platform: mqtt
    name: Generator Engine Speed Target
    state_topic: "genset/tele/status"
    value_template: "{{value_json['engineSpeedTarget']}}"
    unit_of_measurement: "RPM"

  - platform: mqtt
    name: Generator Oil Pressure
    state_topic: "genset/tele/status"
    value_template: "{{value_json['oilPressure']}}"
    unit_of_measurement: "psi"

  - platform: mqtt
    name: Generator Coolant Temperature
    state_topic: "genset/tele/status"
    value_template: "{{value_json['coolantTemperature']}}"
    unit_of_measurement: "°F"

  - platform: mqtt
    name: Generator Battery Voltage
    state_topic: "genset/tele/status"
    value_template: "{{value_json['batteryVoltage']}}"
    unit_of_measurement: "V"

  - platform: mqtt
    name: Generator Fuel Consumption Rate
    state_topic: "genset/tele/status"
    value_template: "{{value_json['fuelRate']}}"
    unit_of_measurement: "L/h"

  - platform: mqtt
    name: Generator Oil Temperature
    state_topic: "genset/tele/status"
    value_template: "{{value_json['oilTemperature']}}"
    unit_of_measurement: "°F"

  - platform: mqtt
    name: Generator Controller Temperature
    state_topic: "genset/tele/status"
    value_template: "{{value_json['controllerTemperature']}}"
    unit_of_measurement: "°F"

  - platform: mqtt
    name: Generator Intake Air Temperature
    state_topic: "genset/tele/status"
    value_template: "{{value_json['intakeAirTemperature']}}"
    unit_of_measurement: "°F"

  - platform: mqtt
    name: Generator Compartment Temperature
    state_topic: "genset/tele/status"
    value_template: "{{value_json['compartmentTemperature']}}"
    unit_of_measurement: "°F"

  - platform: mqtt
    name: Generator Voltage
    state_topic: "genset/tele/status"
    value_template: "{{value_json['generatorVoltage']}}"
    unit_of_measurement: "V"

  - platform: mqtt
    name: Generator Frequency
    state_topic: "genset/tele/status"
    value_template: "{{value_json['generatorFrequency']}}"
    unit_of_measurement: "Hz"

  - platform: mqtt
    name: Generator State
    state_topic: "genset/tele/status"
    value_template: "{{value_json['generatorState']}}"

  - platform: mqtt
    name: Generator Clock
    state_topic: "genset/tele/status"
    value_template: "{{value_json['generatorTime']}}"

  - platform: mqtt
    name: Generator Controller Hours
    state_topic: "genset/tele/status"
    value_template: "{{value_json['controllerHours']}}"
    unit_of_measurement: "h"

  - platform: mqtt
    name: Generator Total Engine Hours
    state_topic: "genset/tele/status"
    value_template: "{{value_json['engineHours']}}"
    unit_of_measurement: "h"

  - platform: mqtt
    name: Generator Loaded Engine Hours
    state_topic: "genset/tele/status"
    value_template: "{{value_json['engineLoadedHours']}}"
    unit_of_measurement: "h"

  - platform: mqtt
    name: Generator Engine Starts
    state_topic: "genset/tele/status"
    value_template: "{{value_json['totalStarts']}}"

  - platform: mqtt
    name: Generator Last Service
    state_topic: "genset/tele/status"
    value_template: "{{value_json['lastService']}}"

  - platform: mqtt
    name: Generator Time Until Service
    state_topic: "genset/tele/status"
    value_template: "{{value_json['runtimeUntilService']}}"
    unit_of_measurement: "h"

  - platform: mqtt
    name: Generator Time Since Service
    state_topic: "genset/tele/status"
    value_template: "{{value_json['runtimeSinceService']}}"
    unit_of_measurement: "h"

  - platform: mqtt
    name: Generator ATS Position
    state_topic: "genset/tele/status"
    value_template: "{{value_json['contactorPosition']}}"

  - platform: mqtt
    name: Generator Available Sources
    state_topic: "genset/tele/status"
    value_template: "{{value_json['availableSources']}}"

  - platform: mqtt
    name: Generator Source 1 Voltage
    state_topic: "genset/tele/status"
    value_template: "{{value_json['source1Voltage']}}"
    unit_of_measurement: "V"

  - platform: mqtt
    name: Generator Source 1 Frequency
    state_topic: "genset/tele/status"
    value_template: "{{value_json['source1Frequency']}}"
    unit_of_measurement: "Hz"

  - platform: mqtt
    name: Generator Source 2 Voltage
    state_topic: "genset/tele/status"
    value_template: "{{value_json['source2Voltage']}}"
    unit_of_measurement: "V"

  - platform: mqtt
    name: Generator Source 2 Frequency
    state_topic: "genset/tele/status"
    value_template: "{{value_json['source2Frequency']}}"
    unit_of_measurement: "Hz"

  - platform: mqtt
    name: Generator Alert
    state_topic: "genset/tele/status"
    value_template: "{{value_json['currentAlert']}}"

  - platform: mqtt
    name: Generator Last Exercise Start
    state_topic: "genset/tele/exercise"
    value_template: "{{value_json['exerciseStart']}}"

  - platform: mqtt
    name: Generator Last Exercise End
    state_topic: "genset/tele/exercise"
    value_template: "{{value_json['lastExercise']}}"

  - platform: mqtt
    name: Generator Next Exercise Start
    state_topic: "genset/tele/exercise"
    value_template: "{{value_json['nextExercise']}}"

  - platform: mqtt
    name: Generator Exercise Interval
    state_topic: "genset/tele/exercise"
    value_template: "{{value_json['exerciseInterval']}}"

  - platform: mqtt
    name: Generator Exercise Duration
    state_topic: "genset/tele/exercise"
    value_template: "{{value_json['exerciseDuration']}}"

  - platform: mqtt
    name: Generator Exercise Mode
    state_topic: "genset/tele/exercise"
    value_template: "{{value_json['exerciseMode']}}"

  - platform: template
    sensors:
      generator_status:
        friendly_name: Generator Status
        value_template: >-
          {% if is_state('binary_sensor.generator_network_connected', 'off') -%}
            Offline
          {% elif  is_state('sensor.generator_state', 'Off') -%}
            Not in Auto
          {% elif  is_state('sensor.generator_state', 'Standby') -%}
            Standby
          {% elif  is_state('sensor.generator_state', 'Running') -%}
            Running
          {% elif  is_state('sensor.generator_state', 'Cool Down') -%}
            Cool Down
          {% elif  is_state('sensor.generator_state', 'Performing Unloaded Test ') -%}
            Unloaded Test
          {% elif  is_state('sensor.generator_state', 'Performing Cycle Exercise') -%}
            Cycle Exercise
          {% elif  is_state('sensor.generator_state', 'Performing Loaded Exercise') -%}
            Loaded Exercise
          {% elif  is_state('sensor.generator_state', 'Performing Unloaded Full Speed Exercise') -%}
            Unloaded Exercise
          {% elif  is_state('sensor.generator_state', 'Performing Full Speed Diagnostics') -%}
            Full Speed Diagnostics
          {% else -%}
            Error
          {% endif -%}

      generator_icon:
        friendly_name: Generator Status Icon
        value_template: >-
          {% if is_state('binary_sensor.generator_network_connected', 'off') -%}
            Offline
          {% elif  is_state('sensor.generator_available_sources', 'Source1') and is_state('binary_sensor.generator_running', 'on')-%}
            Unavailable Running
          {% elif  is_state('sensor.generator_state', 'Standby') and is_state('sensor.generator_alert', '')-%}
            Unavailable
          {% elif  is_state('sensor.generator_state', 'Standby') -%}
            Unavailable Alert
          {% elif  (is_state('sensor.generator_available_sources', 'Source2') or is_state('sensor.generator_available_sources', '3')) and is_state('sensor.generator_alert', '')-%}
            Available
          {% elif  is_state('sensor.generator_available_sources', 'Source2') or is_state('sensor.generator_available_sources', '3') -%}
            Available Alert
          {% else -%}
            Unavailable Alert
          {% endif -%}

      generator_load_icon:
        friendly_name: Generator Load Icon
        value_template: >-
          {% if is_state('binary_sensor.generator_network_connected', 'off') -%}
            Offline
          {% else -%}
            Good
          {% endif -%}

      generator_utility_icon:
        friendly_name: Generator Utility Icon
        value_template: >-
          {% if is_state('binary_sensor.generator_network_connected', 'off') -%}
            Offline
          {% elif  is_state('sensor.generator_available_sources', 'Source1') or is_state('sensor.generator_available_sources', '3') -%}
            Available
          {% else -%}
            Unavailable
          {% endif -%}

      generator_ats_icon:
        friendly_name: Generator ATS Icon
        value_template: >-
          {% if is_state('binary_sensor.generator_network_connected', 'off') -%}
            Offline
          {% elif  is_state('binary_sensor.ats_connected', 'off') -%}
            Fault
          {% elif  is_state('sensor.generator_ats_position', 'Source1') -%}
            Utility
          {% elif  is_state('sensor.generator_ats_position', 'Source2') -%}
            Generator
          {% else -%}
            Fault
          {% endif -%}

      generator_firmware_status:
        friendly_name: Generator Firmware Update Available
        value_template: >-
          {% if states('sensor.generator_current_firmware') ==  states('sensor.generator_latest_firmware') -%}
            Up to Date
          {% else -%}
            Update Available
          {% endif -%}

      generator_ats_sources:
        friendly_name: Generator ATS Sources Available
        value_template: >-
          {% if is_state('sensor.generator_available_sources', 'Source1') -%}
            Source1
          {% elif is_state('sensor.generator_available_sources', 'Source2') -%}
            Source2
          {% else -%}
            Both
          {% endif -%}

      generator_exercise_scheduled:
        friendly_name: Generator Exercise Scheduled
        value_template: >-
          {% if is_state('binary_sensor.generator_exercise_scheduled', 'on') -%}
            Yes
          {% else -%}
            No
          {% endif -%}

      generator_exercise_active:
        friendly_name: Generator Exercise Active
        value_template: >-
          {% if is_state('binary_sensor.generator_exercise_active', 'on') -%}
            Yes
          {% else -%}
            No
          {% endif -%}

      generator_ats_connected:
        friendly_name: Generator Exercise Active
        value_template: >-
          {% if is_state('binary_sensor.generator_ats_connected', 'on') -%}
            Yes
          {% else -%}
            No
          {% endif -%}

      generator_network_connected:
        friendly_name: Generator Exercise Active
        value_template: >-
          {% if is_state('binary_sensor.generator_network_connected', 'on') -%}
            Yes
          {% else -%}
            No
          {% endif -%}

binary_sensor:
  - platform: mqtt
    name: Generator Low Oil
    state_topic: "genset/tele/status"
    value_template: "{{value_json.lowOil}}"
    payload_on: "On"
    payload_off: "Off"

  - platform: mqtt
    name: Generator Network Connected
    state_topic: "genset/tele/status"
    value_template: "{{value_json.networkConnected}}"
    payload_on: "true"
    payload_off: "false"

  - platform: mqtt
    name: Generator ATS Connected
    state_topic: "genset/tele/status"
    value_template: "{{value_json.atsConnected}}"
    payload_on: "True"
    payload_off: "False"

  - platform: mqtt
    name: Generator Exercise Scheduled
    state_topic: "genset/tele/exercise"
    value_template: "{{value_json.exerciseScheduled}}"
    payload_on: true
    payload_off: false

  - platform: mqtt
    name: Generator Exercise Active
    state_topic: "genset/tele/exercise"
    value_template: "{{value_json.exerciseActive}}"
    payload_on: true
    payload_off: false

  - platform: template
    sensors:
      generator_running:
        friendly_name: Generator Running
        value_template: "{{ states('sensor.generator_engine_speed') | int > 0 }}"
