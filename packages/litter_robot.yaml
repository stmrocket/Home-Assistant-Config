sensor:

  - platform: mqtt
    name: Litter Robot Power Status
    state_topic: "pooper/status"
    value_template: "{{value_json['powerStatus']}}"

  - platform: mqtt
    name: Litter Robot Sleep Mode Start Time
    state_topic: "pooper/status"
    value_template: "{{value_json['sleepModeStartTime']}}"  

  - platform: mqtt
    name: Litter Robot Sleep Mode End Time
    state_topic: "pooper/status"
    value_template: "{{value_json['sleepModeEndTime']}}"  

  - platform: mqtt
    name: Litter Robot DFI Cycle Count
    state_topic: "pooper/status"
    value_template: "{{value_json['DFICycleCount']}}"  

  - platform: mqtt
    name: Litter Robot Cycle Wait Time
    state_topic: "pooper/status"
    value_template: "{{value_json['cleanCycleWaitTimeMinutes']}}"  

  - platform: mqtt
    name: Litter Robot Status
    state_topic: "pooper/status"
    value_template: "{{value_json['unitStatus']}}" 

  - platform: mqtt
    name: Litter Robot Cycle Count
    state_topic: "pooper/status"
    value_template: "{{value_json['cycleCount']}}" 

  - platform: mqtt
    name: Litter Robot Cycles After Full
    state_topic: "pooper/status"
    value_template: "{{value_json['cyclesAfterDrawerFull']}}" 

  - platform: mqtt
    name: Litter Robot Reported Cycle Capacity
    state_topic: "pooper/status"
    value_template: "{{value_json['cycleCapacity']}}" 



  - platform: template
    sensors:
      litter_robot_status_short:
        friendly_name: Short Litter Robot Status
        value_template: >-
          {% if is_state('sensor.litter_robot_status', 'RDY') or is_state('sensor.litter_robot_status', 'CCC') -%}
            Ready
          {% elif  is_state('sensor.litter_robot_status', 'CCP') -%}
            Clean
          {% elif  is_state('sensor.litter_robot_status', 'DF2') -%}
            Drawer 2
          {% elif  is_state('sensor.litter_robot_status', 'DF1') -%}
            Drawer 1
          {% elif  is_state('sensor.litter_robot_status', 'CSF') or is_state('sensor.litter_robot_status', 'CSI') -%}
            Sensor
          {% elif  is_state('sensor.litter_robot_status', 'CST') -%}
            Timing
          {% elif  is_state('sensor.litter_robot_status', 'BR') -%}
            Bonnet  
          {% elif  is_state('sensor.litter_robot_status', 'P') -%}
            Paused 
          {% elif  is_state('sensor.litter_robot_status', 'PD') -%}
            Pinch
          {% elif  is_state('sensor.litter_robot_status', 'PD') -%}
            Pinch
          {% elif  is_state('sensor.litter_robot_status', 'OFF') -%}
            Off 
          {% elif  is_state('sensor.litter_robot_status', 'DFS') or is_state('sensor.litter_robot_status', 'SDF') -%}
            Full
          {% elif  is_state('switch.litter_robot_sleep', 'on') -%}
            Sleep
          {% else -%}
            Error
          {% endif -%}

      litter_robot_average_cycle_capacity:
        friendly_name: Litter Robot Average Cycle Capacity
        value_template: >-
          {% if states('input_number.litter_robot_empty_count',) | int == 0 -%}
            33
          {% else -%}
            {{(states('input_number.litter_robot_cycle_count') | int / states('input_number.litter_robot_empty_count') | int) | round(0)}}
          {% endif -%}

      litter_robot_drawer_level:
        friendly_name: Litter Robot Drawer Level
        value_template: "{{ ((states('counter.litter_robot_cycle_count') | int / states('sensor.litter_robot_average_cycle_capacity') | int) * 100) | round(0) }}"

binary_sensor:
  - platform: mqtt
    name: Litter Robot Online
    state_topic: "pooper/status"
    value_template: '{{value_json.didNotifyOffline}}'
    payload_on: false
    payload_off: true

  - platform: mqtt
    name: Litter Robot Drawer Full
    state_topic: "pooper/status"
    value_template: '{{value_json.isDFITriggered}}'
    payload_on: "1"
    payload_off: "0"

switch:
  - platform: mqtt
    name: Litter Robot Sleep Mode
    state_topic: "pooper/status"
    command_topic: "pooper/command/sleep"
    payload_on: "ON"
    payload_off: "OFF"
    state_on: "1"
    state_off: "0"
    value_template: "{{value_json['sleepModeActive']}}" 

  - platform: mqtt
    name: Litter Robot Power
    state_topic: "pooper/status"
    command_topic: "pooper/command/power"
    payload_on: "ON"
    payload_off: "OFF"
    state_on: "ON"
    state_off: "OFF"
    value_template: "{{value_json['unitPower']}}" 

  - platform: mqtt
    name: Litter Robot Lock
    state_topic: "pooper/status"
    command_topic: "pooper/command/lock"
    payload_on: "ON"
    payload_off: "OFF"
    state_on: "1"
    state_off: "0"
    value_template: "{{value_json['panelLockActive']}}" 

  - platform: mqtt
    name: Litter Robot Light
    state_topic: "pooper/status"
    command_topic: "pooper/command/light"
    payload_on: "ON"
    payload_off: "OFF"
    state_on: "1"
    state_off: "0"
    value_template: "{{value_json['nightLightActive']}}" 

input_number:

  litter_robot_cycle_count:
    name: Litter Robot Total Cycles
    mode: box
    min: 0
    max: 1000000
    step: 1

  litter_robot_empty_count:
    name: Litter Robot Total Empties
    mode: box
    min: 0
    max: 1000000
    step: 1

counter:
  litter_robot_cycle_count:
    step: 1    

script:
  litter_robot_empty:
    sequence:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.litter_robot_cycle_count
          value: "{{ states('input_number.litter_robot_cycle_count') | int + states('counter.litter_robot_cycle_count') | int }}"        
      - service: input_number.increment
        entity_id: input_number.litter_robot_empty_count
      - service: counter.reset
        entity_id: counter.litter_robot_cycle_count
      - service: mqtt.publish
        data_template:
          topic: "pooper/command/empty"
          payload: "{{ states('sensor.litter_robot_average_cycle_capacity') }}"    

automation:
  - alias: Update Litter Robot Cycle Count
    trigger:
      - platform: state
        entity_id: sensor.litter_robot_cycle_count
    condition:
      - condition: template
        value_template: "{{ not is_state('sensor.litter_robot_cycle_count', '0') }}"
    action:
      - service: counter.increment
        entity_id: counter.litter_robot_cycle_count