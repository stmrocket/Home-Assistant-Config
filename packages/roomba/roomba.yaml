# Roomba

vacuum:
  - platform: template
    vacuums:
      roomba:
        unique_id: e191b333-3723-43f2-be47-f8d8574a7e45
        value_template: "{{ states('sensor.roomba_state') }}"
        battery_level_template: "{{ states('sensor.roomba_battery_level') | int(none) }}"
        start:
          service: mqtt.publish
          data:
            topic: roomba/command/set
            payload: start
        pause:
          service: mqtt.publish
          data:
            topic: roomba/command/set
            payload: pause
        stop:
          service: mqtt.publish
          data:
            topic: roomba/command/set
            payload: stop
        return_to_base:
          service: script.turn_on
          data:
            entity_id: script.roomba_dock

# Roomba Sensors

mqtt:
  sensor:
    - name: "Roomba Battery Level"
      unique_id: 93da098c-b0c7-440f-b5b0-07e8f2716d5c
      state_topic: "roomba/tele/battery"
      unit_of_measurement: "%"
      device_class: "battery"

    - name: "Roomba State"
      unique_id: 642e6275-17f2-40ad-bfe0-cf40d53df385
      state_topic: "roomba/tele/status"

    - name: "Roomba Scheduler Command"
      unique_id: 7d7905b2-6991-41f7-aa57-e46472cd6406
      state_topic: "hass/roomba/command"

sensor:
  - platform: template
    sensors:
      roomba_status:
        unique_id: 8f8ddb04-5b05-4c97-b17a-ba34b6cc91cc
        friendly_name: "Roomba Status"
        value_template: >-
          {% if is_state('vacuum.roomba', 'docked') and states('counter.roomba_cycles') | int(none) >= 5 -%}
            full
          {% else -%}
            {{ states('vacuum.roomba') }}
          {% endif -%}

# Roomba Switches

switch:
  - platform: template
    switches:
      roomba:
        unique_id: 9c4ef5f5-3069-47fe-a707-b58f9da886b0
        friendly_name: "Roomba Power"
        value_template: "{{ is_state('vacuum.roomba', 'cleaning') or is_state('vacuum.roomba', 'returning') }}"
        turn_on:
          service: vacuum.start
          data:
            entity_id: vacuum.roomba
        turn_off:
          service: script.turn_on
          data:
            entity_id: script.roomba_dock

input_boolean:
  roomba_auto:
    name: Schedule Enabled
    icon: mdi:timer-outline

counter:
  roomba_cycles:
    step: 1

# Roomba Scripts

script:
  roomba_dock:
    sequence:
      - service: mqtt.publish
        data:
          topic: roomba/command/set
          payload: stop
      - delay:
          milliseconds: 500
      - service: mqtt.publish
        data:
          topic: roomba/command/set
          payload: dock

  reset_roomba_counter:
    sequence:
      - service: counter.reset
        entity_id: counter.roomba_cycles
