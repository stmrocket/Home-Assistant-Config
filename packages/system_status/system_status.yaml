device_tracker:
  - platform: ping
    hosts:
      core_router: !secret core_router_ip
      nas: !secret nas_ip
      hdhomerun: !secret hdhr_ip
      musicport: !secret musicport_ip
      owfs_pi: !secret owfs_pi_ip
      core_switch: !secret core_switch_ip
      poe_switch: !secret poe_switch_ip
      isy_994: !secret isy_ip
      alarm_panel: !secret alarm_panel_ip
      unifi_front: !secret unifi_front_ip
      unifi_back: !secret unifi_back_ip
      redlink: !secret redlink_ip
      server_ups: !secret server_ups_ip
      shack_ups: !secret shack_ups_ip
      office_ups: !secret office_ups_ip
      generator: !secret generator_ip
      rainmachine: !secret rainmachine_ip
      adguard: !secret adguard_ip

#################################################################
#                                                               #
#                       Binary Sensors                          #
#                                                               #
#################################################################

binary_sensor:
  - platform: ping
    name: WAN Ping
    host: !secret ping_ip
    count: 4
    scan_interval: 600

  - platform: template
    sensors:
      # True if there's an update available for supervisor
      updater_supervisor:
        friendly_name: "Updater - Supervisor"
        device_class: problem
        value_template: "{{ state_attr('sensor.supervisor_updates', 'update_available') }}"
        availability_template: "{{ (states('sensor.supervisor_updates') | int(-1)) > -1 }}"

      # True if there's updates available for any addons
      updater_addons:
        friendly_name: "Updater - Addons"
        device_class: problem
        value_template: "{{ states('sensor.supervisor_updates') | int > 0 }}"

#################################################################
#                                                               #
#                           Sensors                             #
#                                                               #
#################################################################

sensor:
  - platform: snmp
    name: "ERL WAN In"
    host: !secret edge_os_host
    baseoid: 1.3.6.1.2.1.31.1.1.1.6.2
    community: "public"
    version: "2c"
    scan_interval: 10

  - platform: snmp
    name: "ERL WAN Out"
    host: !secret edge_os_host
    baseoid: 1.3.6.1.2.1.31.1.1.1.10.2
    community: "public"
    version: "2c"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Battery Capacity"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.1.0
    community: "public"
    version: "1"
    accept_errors: true
    unit_of_measurement: "%"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Remaining Runtime"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.3.0
    accept_errors: true
    unit_of_measurement: "minutes"
    value_template: "{{((value | int) / 6000) | int}}"

  - platform: snmp
    name: "Server UPS Battery Temperature"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.2.0
    accept_errors: true
    unit_of_measurement: "°C"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Input Voltage"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.3.2.1.0
    accept_errors: true
    unit_of_measurement: "V"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Input Frequency"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.3.2.4.0
    accept_errors: true
    unit_of_measurement: "Hz"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Output Voltage"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.1.0
    accept_errors: true
    unit_of_measurement: "V"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Output Frequency"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.2.0
    accept_errors: true
    unit_of_measurement: "Hz"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Output Current"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.4.0
    accept_errors: true
    unit_of_measurement: "A"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Output Load"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.3.0
    accept_errors: true
    unit_of_measurement: "%"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Battery Status"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.4.0
    accept_errors: true
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Battery Capacity"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.1.0
    community: "public"
    version: "1"
    accept_errors: true
    unit_of_measurement: "%"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Remaining Runtime"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.3.0
    accept_errors: true
    unit_of_measurement: "minutes"
    value_template: "{{((value | int) / 6000) | int}}"

  - platform: snmp
    name: "Office UPS Battery Temperature"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.2.0
    accept_errors: true
    unit_of_measurement: "°C"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Input Voltage"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.3.2.1.0
    accept_errors: true
    unit_of_measurement: "V"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Input Frequency"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.3.2.4.0
    accept_errors: true
    unit_of_measurement: "Hz"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Output Voltage"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.1.0
    accept_errors: true
    unit_of_measurement: "V"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Output Frequency"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.2.0
    accept_errors: true
    unit_of_measurement: "Hz"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Output Current"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.4.0
    accept_errors: true
    unit_of_measurement: "A"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Output Load"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.3.0
    accept_errors: true
    unit_of_measurement: "%"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Battery Status"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.4.0
    accept_errors: true
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Battery Capacity"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.1.0
    community: "public"
    version: "1"
    accept_errors: true
    unit_of_measurement: "%"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Remaining Runtime"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.3.0
    accept_errors: true
    unit_of_measurement: "minutes"
    value_template: "{{((value | int) / 6000) | int}}"

  - platform: snmp
    name: "Shack UPS Battery Temperature"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.2.0
    accept_errors: true
    unit_of_measurement: "°C"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Input Voltage"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.3.2.1.0
    accept_errors: true
    unit_of_measurement: "V"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Input Frequency"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.3.2.4.0
    accept_errors: true
    unit_of_measurement: "Hz"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Output Voltage"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.1.0
    accept_errors: true
    unit_of_measurement: "V"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Output Frequency"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.2.0
    accept_errors: true
    unit_of_measurement: "Hz"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Output Current"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.4.0
    accept_errors: true
    unit_of_measurement: "A"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Output Load"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.3.0
    accept_errors: true
    unit_of_measurement: "%"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Battery Status"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.4.0
    accept_errors: true
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    host: !secret nas_ip
    baseoid: .1.3.6.1.2.1.25.1.1.0
    name: "NAS Uptime"
    value_template: >-
      {% set time = (value | int) | int %}
      {% set minutes = ((time % 360000) / 6000) | int%}
      {% set hours = ((time % 8640000) / 360000) | int %}
      {% set days = (time / 8640000) | int %}
        {%- if time < 60-%}
          00:00:00
        {%- else -%}
          {%- if days == 0 -%}
            00
          {%- endif -%}
          {%- if days > 0 -%}        
            {%- if days < 10 -%}
              0{{ days }}
            {%- else -%}
              {{ days }}
            {%- endif -%}
          {%- endif -%}
          {%- if hours == 0 -%}
            :00
          {%- endif -%}
          {%- if hours > 0 -%}        
            {%- if hours < 10 -%}
              :0{{ hours }}
            {%- else -%}
              :{{ hours }}
            {%- endif -%}
          {%- endif -%}
          {%- if minutes == 0 -%}
            :00
          {%- endif -%}
          {%- if minutes > 0 -%}
            {%- if minutes < 10 -%}
              :0{{ minutes }}
            {%- else -%}
              :{{ minutes }}
            {%- endif -%}
          {%- endif -%}
        {%- endif -%}

  - platform: snmp
    host: !secret core_router_ip
    baseoid: .1.3.6.1.2.1.25.1.1.0
    name: "Core Router Uptime"
    value_template: >-
      {% set time = (value | int) | int %}
      {% set minutes = ((time % 360000) / 6000) | int%}
      {% set hours = ((time % 8640000) / 360000) | int %}
      {% set days = (time / 8640000) | int %}
        {%- if time < 60-%}
          00:00:00
        {%- else -%}
          {%- if days == 0 -%}
            00
          {%- endif -%}
          {%- if days > 0 -%}        
            {%- if days < 10 -%}
              0{{ days }}
            {%- else -%}
              {{ days }}
            {%- endif -%}
          {%- endif -%}
          {%- if hours == 0 -%}
            :00
          {%- endif -%}
          {%- if hours > 0 -%}        
            {%- if hours < 10 -%}
              :0{{ hours }}
            {%- else -%}
              :{{ hours }}
            {%- endif -%}
          {%- endif -%}
          {%- if minutes == 0 -%}
            :00
          {%- endif -%}
          {%- if minutes > 0 -%}
            {%- if minutes < 10 -%}
              :0{{ minutes }}
            {%- else -%}
              :{{ minutes }}
            {%- endif -%}
          {%- endif -%}
        {%- endif -%}

  ####################################################
  #                                                  #
  #             Sensor - System Monitor              #
  #                                                  #
  ####################################################

  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: "/"
      - type: memory_use_percent
      - type: processor_use
      - type: last_boot

  ####################################################
  #                                                  #
  #               Sensor - Statistics                #
  #                                                  #
  ####################################################

  - platform: statistics
    name: "ERL WAN In Stats"
    entity_id: sensor.erl_wan_in
    sampling_size: 4
    max_age:
      hours: 24

  - platform: statistics
    name: "ERL WAN Out Stats"
    entity_id: sensor.erl_wan_out
    sampling_size: 4
    max_age:
      hours: 24

  #################################################################
  #                                                               #
  #                       Template Sensors                        #
  #                                                               #
  #################################################################

  - platform: template
    sensors:
      wan_in_mbps:
        value_template: "{{ (state_attr('sensor.erl_wan_in_stats','change_rate')|float*8*(state_attr('sensor.erl_wan_in_stats', 'sampling_size')-1)/1000000)|round(2) }}"
        unit_of_measurement: "Mbps"

      wan_out_mbps:
        value_template: "{{ (state_attr('sensor.erl_wan_out_stats','change_rate')|float*8*(state_attr('sensor.erl_wan_out_stats', 'sampling_size')-1)/1000000)|round(2) }}"
        unit_of_measurement: "Mbps"

      wan_ping:
        friendly_name: "WAN Ping"
        value_template: "{{ state_attr('binary_sensor.wan_ping', 'round_trip_time_avg') | round(2) }}"
        unit_of_measurement: "ms"

      sensor_count:
        friendly_name: "Number of Sensors"
        value_template: >
          {%- set domains = ['sensor'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      automation_count:
        friendly_name: "Number of Automations"
        value_template: >
          {%- set domains = ['automation'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      script_count:
        friendly_name: "Number of Scripts"
        value_template: >
          {%- set domains = ['script'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      switch_count:
        friendly_name: "Number of Switches"
        value_template: >
          {%- set domains = ['switch'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      binary_sensor_count:
        friendly_name: "Number of Binary Sensors"
        value_template: >
          {%- set domains = ['binary_sensor'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      lights_count:
        friendly_name: "Number of Lights"
        value_template: >
          {%- set domains = ['light'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      tracker_count:
        friendly_name: "Number of Devices"
        value_template: >
          {%- set domains = ['device_tracker'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      camera_count:
        friendly_name: "Number of Devices"
        value_template: >
          {%- set domains = ['camera'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      fan_count:
        friendly_name: "Number of Devices"
        value_template: >
          {%- set domains = ['fan'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      media_player_count:
        friendly_name: "Number of Devices"
        value_template: >
          {%- set domains = ['media_player'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      automation_count_high:
        friendly_name: "Automation Count High Limit"
        value_template: "{{ states('input_number.automation_count_expected') |int + 150 }}"

      automation_count_low:
        friendly_name: "Automation Count Low Limit"
        value_template: "{{ states('input_number.automation_count_expected') |int - 1 }}"

      binary_sensor_count_high:
        friendly_name: "Binary Sensor Count High Limit"
        value_template: "{{ states('input_number.binary_sensor_count_expected') |int + 150 }}"

      binary_sensor_count_low:
        friendly_name: "Binary Sensor Count Low Limit"
        value_template: "{{ states('input_number.binary_sensor_count_expected') |int - 1 }}"

      switch_count_high:
        friendly_name: "Switch Count High Limit"
        value_template: "{{ states('input_number.switch_count_expected') |int + 150 }}"

      switch_count_low:
        friendly_name: "Switch Count Low Limit"
        value_template: "{{ states('input_number.switch_count_expected') |int - 1 }}"

      fan_count_high:
        friendly_name: "Fan Count High Limit"
        value_template: "{{ states('input_number.fan_count_expected') |int + 150 }}"

      fan_count_low:
        friendly_name: "Fan Count Low Limit"
        value_template: "{{ states('input_number.fan_count_expected') |int - 1 }}"

      light_count_high:
        friendly_name: "Light Count High Limit"
        value_template: "{{ states('input_number.light_count_expected') |int + 150 }}"

      light_count_low:
        friendly_name: "Light Count Low Limit"
        value_template: "{{ states('input_number.light_count_expected') |int - 1 }}"

      tracked_device_count_high:
        friendly_name: "Tracked Device Count High Limit"
        value_template: "{{ states('input_number.tracked_device_count_expected') |int + 150 }}"

      tracked_device_count_low:
        friendly_name: "Tracked Device Count Low Limit"
        value_template: "{{ states('input_number.tracked_device_count_expected') |int - 1 }}"

      media_player_count_high:
        friendly_name: "Media Player Count High Limit"
        value_template: "{{ states('input_number.media_player_count_expected') |int + 150 }}"

      media_player_count_low:
        friendly_name: "Media Player Count Low Limit"
        value_template: "{{ states('input_number.media_player_count_expected') |int - 1 }}"

      script_count_high:
        friendly_name: "Script Count High Limit"
        value_template: "{{ states('input_number.script_count_expected') |int + 150 }}"

      script_count_low:
        friendly_name: "Script Count Low Limit"
        value_template: "{{ states('input_number.script_count_expected') |int - 1 }}"

      sensor_count_high:
        friendly_name: "Sensor Count High Limit"
        value_template: "{{ states('input_number.sensor_count_expected') |int + 150 }}"

      sensor_count_low:
        friendly_name: "Sensor Count Low Limit"
        value_template: "{{ states('input_number.sensor_count_expected') |int - 1 }}"

      hass_uptime:
        friendly_name: Home Assistant Uptime
        value_template: >-
          {% set time = (as_timestamp(now()) - as_timestamp(states('sensor.time_online'))) / 60 | int %}
            {% set minutes = ((time % 60) ) | int%}
            {% set hours = ((time % 1440) / 60) | int %}
            {% set days = (time / 1440) | int %}
              {%- if time == 0 -%}
                00:00:00
              {%- else -%}
                {%- if days == 0 -%}
                  00
                {%- endif -%}
                {%- if days > 0 -%}        
                  {%- if days < 10 -%}
                    0{{ days }}
                  {%- else -%}
                    {{ days }}
                  {%- endif -%}
                {%- endif -%}
                {%- if hours == 0 -%}
                  :00
                {%- endif -%}
                {%- if hours > 0 -%}        
                  {%- if hours < 10 -%}
                    :0{{ hours }}
                  {%- else -%}
                    :{{ hours }}
                  {%- endif -%}
                {%- endif -%}
                {%- if minutes == 0 -%}
                  :00
                {%- endif -%}
                {%- if minutes > 0 -%}
                  {%- if minutes < 10 -%}
                    :0{{ minutes }}
                  {%- else -%}
                    :{{ minutes }}
                  {%- endif -%}
                {%- endif -%}
              {%- endif -%}

      hass_restart:
        friendly_name: Home Assistant Restart Time
        value_template: >-
          {% set time = (as_timestamp(states('sensor.time_online'))) - (as_timestamp(states('sensor.ha_shutdown'))) | int %}
            {% set seconds = ((time % 60) ) | int%}
            {% set minutes = (time / 60) | int %}
              {%- if time == 0 -%}
                00:00
              {%- else -%}
                {%- if minutes == 0 -%}
                  00
                {%- endif -%}
                {%- if minutes > 0 -%}        
                  {%- if minutes < 10 -%}
                    0{{ minutes }}
                  {%- else -%}
                    {{ minutes }}
                  {%- endif -%}
                {%- endif -%}
                {%- if seconds == 0 -%}
                  :00
                {%- endif -%}
                {%- if seconds > 0 -%}
                  {%- if seconds < 10 -%}
                    :0{{ seconds }}
                  {%- else -%}
                    :{{ seconds }}
                  {%- endif -%}
                {%- endif -%}
              {%- endif -%}

      office_ups_battery_health:
        friendly_name: Office UPS Battery Status
        value_template: >
          {% if is_state('sensor.office_ups_battery_status', '1') -%}
            Good
          {% elif  is_state('sensor.office_ups_battery_status', '2') -%}
            Replace
          {% else -%}
            Error
          {% endif -%}

      server_ups_battery_health:
        friendly_name: Server UPS Battery Status
        value_template: >
          {% if is_state('sensor.server_ups_battery_status', '1') -%}
            Good
          {% elif  is_state('sensor.server_ups_battery_status', '2') -%}
            Replace
          {% else -%}
            Error
          {% endif -%}

      shack_ups_battery_health:
        friendly_name: Shack UPS Battery Status
        value_template: >
          {% if is_state('sensor.shack_ups_battery_status', '1') -%}
            Good
          {% elif  is_state('sensor.shack_ups_battery_status', '2') -%}
            Replace
          {% else -%}
            Error
          {% endif -%}

      office_ups_status:
        friendly_name: Office UPS Operating Status
        value_template: >
          {% if is_state('device_tracker.office_ups', 'not_home') -%}
            Offline
          {% elif is_state('sensor.office_ups_battery_status', '2') -%}
            Battery Fail
          {% elif  states('sensor.office_ups_input_voltage') | int > 100 -%}
            Utility
          {% elif  states('sensor.office_ups_input_voltage') | int < 100 and states('sensor.office_ups_output_voltage') | int > 100 -%}
            Battery
          {% else -%}
            Error
          {% endif -%}

      server_ups_status:
        friendly_name: Server UPS Operating Status
        value_template: >
          {% if is_state('device_tracker.server_ups', 'not_home') -%}
            Offline
          {% elif is_state('sensor.server_ups_battery_status', '2') -%}
            Battery Fail
          {% elif  states('sensor.server_ups_input_voltage') | int > 100 -%}
            Utility
          {% elif  states('sensor.server_ups_input_voltage') | int < 100 and states('sensor.server_ups_output_voltage') | int > 100 -%}
            Battery
          {% else -%}
            Error
          {% endif -%}

      shack_ups_status:
        friendly_name: Shack UPS Operating Status
        value_template: >
          {% if is_state('device_tracker.shack_ups', 'not_home') -%}
            Offline
          {% elif is_state('sensor.shack_ups_battery_status', '2') -%}
            Battery Fail
          {% elif  states('sensor.shack_ups_input_voltage') | int > 100 -%}
            Utility
          {% elif  states('sensor.shack_ups_input_voltage') | int < 100 and states('sensor.server_ups_output_voltage') | int > 100 -%}
            Battery
          {% else -%}
            Error
          {% endif -%}

  ####################################################
  #                                                  #
  #                 Sensor - Uptime                  #
  #                                                  #
  ####################################################

  - platform: uptime
    name: Time Online
  # Sensor to track available updates for supervisor & addons
  - platform: command_line
    name: Supervisor updates
    command: 'curl http://supervisor/supervisor/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"newest_version":.data.version_latest,"current_version":.data.version,"update_available":.data.update_available,"addons":[.data.addons[] | select(.update_available)]}'''
    value_template: "{{ value_json.addons | length }}"
    unit_of_measurement: pending update(s)
    json_attributes:
      - update_available
      - newest_version
      - current_version
      - addons

  - platform: mqtt
    state_topic: "hass/restart"
    name: "HA Shutdown"

####################################################
#                                                  #
#                  NUMERIC INPUT                   #
#                                                  #
####################################################
input_number:
  automation_count_expected:
    name: Expected Automations
    min: 0
    max: 5000
    mode: box
  binary_sensor_count_expected:
    name: Expected Binary Sensors
    min: 0
    max: 5000
    mode: box
  switch_count_expected:
    name: Expected Switches
    min: 0
    max: 5000
    mode: box
  fan_count_expected:
    name: Expected Fans
    min: 0
    max: 5000
    mode: box
  light_count_expected:
    name: Expected Lights
    min: 0
    max: 5000
    mode: box
  tracked_device_count_expected:
    name: Expected Tracked Devices
    min: 0
    max: 5000
    mode: box
  media_player_count_expected:
    name: Expected Media Players
    min: 0
    max: 5000
    mode: box
  script_count_expected:
    name: Expected Scripts
    min: 0
    max: 5000
    mode: box
  sensor_count_expected:
    name: Expected Sensors
    min: 0
    max: 5000
    mode: box

#################################################################
#                                                               #
#                         System Health                         #
#                                                               #
#################################################################

system_health:

#################################################################
#                                                               #
#                             Groups                            #
#                                                               #
#################################################################

group:
  leds:
    name: LED Controllers
    all: "true"
    entities:
      - device_tracker.den_1
      - device_tracker.gbath
      - device_tracker.kitchen_1
      - device_tracker.kitchen_2
      - device_tracker.kitchen_3
      - device_tracker.kitchen_4
      - device_tracker.kitchen_5
      - device_tracker.kitchen_6
      - device_tracker.kitchen_7
      - device_tracker.kitchen_8
      - device_tracker.mbath
      - device_tracker.mbed_1
      - device_tracker.mbed_2
      - device_tracker.shack
  blinds:
    name: Blind Controllers
    all: "true"
    entities:
      - device_tracker.den_c
      - device_tracker.den_l
      - device_tracker.den_r
      - device_tracker.guest
      - device_tracker.kitchen_e
      - device_tracker.kitchen_l
      - device_tracker.kitchen_r
      - device_tracker.master_c
      - device_tracker.master_l
      - device_tracker.master_r
      - device_tracker.master_w
      - device_tracker.office_c
      - device_tracker.office_l
      - device_tracker.office_r
      - device_tracker.shack_c
      - device_tracker.shack_l
      - device_tracker.shack_r
      - device_tracker.server
  docker:
    name: Docker
    all: "true"
    entities:
      - switch.frigate
      - switch.mysql
      - switch.tv_headend
      - switch.eagle_mqtt
