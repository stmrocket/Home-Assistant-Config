# device_tracker:
#   - platform: ping
#     hosts:
#       core_router: !secret core_router_ip
#       nas: !secret nas_ip
#       hdhomerun: !secret hdhr_ip
#       musicport: !secret musicport_ip
#       owfs_pi: !secret owfs_pi_ip
#       core_switch: !secret core_switch_ip
#       poe_switch: !secret poe_switch_ip
#       isy_994: !secret isy_ip
#       alarm_panel: !secret alarm_panel_ip
#       ap_front: !secret ap_front_ip
#       ap_den: !secret ap_den_ip
#       ap_garage: !secret ap_garage_ip
#       ap_shed: !secret ap_shed_ip
#       redlink: !secret redlink_ip
#       server_ups: !secret server_ups_ip
#       shack_ups: !secret shack_ups_ip
#       office_ups: !secret office_ups_ip
#       generator: !secret generator_ip
#       rainmachine: !secret rainmachine_ip
#       adguard: !secret adguard_ip

#################################################################
#                                                               #
#                       Binary Sensors                          #
#                                                               #
#################################################################

binary_sensor:

  - platform: template
    sensors:
      # True if there's an update available for supervisor
      updater_supervisor:
        unique_id: 993a5a03-6340-4558-a753-a4e1ff9c5780
        friendly_name: "Updater - Supervisor"
        device_class: problem
        value_template: "{{ state_attr('sensor.supervisor_updates', 'update_available') }}"
        availability_template: "{{ (states('sensor.supervisor_updates') | int(-1)) > -1 }}"

      # True if there's updates available for any addons
      updater_addons:
        unique_id: da31bf79-22ab-4570-bdff-a64975e106fc
        friendly_name: "Updater - Addons"
        device_class: problem
        value_template: "{{ states('sensor.supervisor_updates') | int(none) > 0 }}"

#################################################################
#                                                               #
#                           Sensors                             #
#                                                               #
#################################################################

sensor:
  - platform: snmp
    name: "ERL WAN In"
    host: !secret edge_os_host
    baseoid: 1.3.6.1.2.1.2.2.1.16.1
    community: "public"
    version: "2c"
    scan_interval: 10

  - platform: snmp
    name: "ERL WAN Out"
    host: !secret edge_os_host
    baseoid: 1.3.6.1.2.1.2.2.1.10.1
    community: "public"
    version: "2c"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Battery Capacity"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.1.0
    community: "public"
    version: "1"
    accept_errors: true
    unit_of_measurement: "%"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Remaining Runtime"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.3.0
    accept_errors: true
    unit_of_measurement: "minutes"
    value_template: "{{((value | int(none)) / 6000) | int(none)}}"

  - platform: snmp
    name: "Server UPS Battery Temperature"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.2.0
    accept_errors: true
    unit_of_measurement: "°C"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Input Voltage"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.3.2.1.0
    accept_errors: true
    unit_of_measurement: "V"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Input Frequency"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.3.2.4.0
    accept_errors: true
    unit_of_measurement: "Hz"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Output Voltage"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.1.0
    accept_errors: true
    unit_of_measurement: "V"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Output Frequency"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.2.0
    accept_errors: true
    unit_of_measurement: "Hz"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Output Current"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.4.0
    accept_errors: true
    unit_of_measurement: "A"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Output Load"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.3.0
    accept_errors: true
    unit_of_measurement: "%"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Server UPS Battery Status"
    host: !secret server_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.4.0
    accept_errors: true
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Battery Capacity"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.1.0
    community: "public"
    version: "1"
    accept_errors: true
    unit_of_measurement: "%"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Remaining Runtime"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.3.0
    accept_errors: true
    unit_of_measurement: "minutes"
    value_template: "{{((value | int(none)) / 6000) | int(none)}}"

  - platform: snmp
    name: "Office UPS Battery Temperature"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.2.0
    accept_errors: true
    unit_of_measurement: "°C"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Input Voltage"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.3.2.1.0
    accept_errors: true
    unit_of_measurement: "V"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Input Frequency"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.3.2.4.0
    accept_errors: true
    unit_of_measurement: "Hz"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Output Voltage"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.1.0
    accept_errors: true
    unit_of_measurement: "V"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Output Frequency"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.2.0
    accept_errors: true
    unit_of_measurement: "Hz"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Output Current"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.4.0
    accept_errors: true
    unit_of_measurement: "A"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Output Load"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.3.0
    accept_errors: true
    unit_of_measurement: "%"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Office UPS Battery Status"
    host: !secret office_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.4.0
    accept_errors: true
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Battery Capacity"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.1.0
    community: "public"
    version: "1"
    accept_errors: true
    unit_of_measurement: "%"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Remaining Runtime"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.3.0
    accept_errors: true
    unit_of_measurement: "minutes"
    value_template: "{{((value | int(none)) / 6000) | int(none)}}"

  - platform: snmp
    name: "Shack UPS Battery Temperature"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.2.0
    accept_errors: true
    unit_of_measurement: "°C"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Input Voltage"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.3.2.1.0
    accept_errors: true
    unit_of_measurement: "V"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Input Frequency"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.3.2.4.0
    accept_errors: true
    unit_of_measurement: "Hz"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Output Voltage"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.1.0
    accept_errors: true
    unit_of_measurement: "V"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Output Frequency"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.2.0
    accept_errors: true
    unit_of_measurement: "Hz"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Output Current"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.4.0
    accept_errors: true
    unit_of_measurement: "A"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Output Load"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.4.2.3.0
    accept_errors: true
    unit_of_measurement: "%"
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    name: "Shack UPS Battery Status"
    host: !secret shack_ups_ip
    baseoid: .1.3.6.1.4.1.318.1.1.1.2.2.4.0
    accept_errors: true
    community: "public"
    version: "1"
    scan_interval: 10

  - platform: snmp
    host: !secret nas_ip
    baseoid: .1.3.6.1.2.1.25.1.1.0
    name: "NAS Uptime"
    value_template: >-
      {% set time = (value | int(none)) | int(none) %}
      {% set minutes = ((time % 360000) / 6000) | int(none)%}
      {% set hours = ((time % 8640000) / 360000) | int(none) %}
      {% set days = (time / 8640000) | int(none) %}
        {%- if time < 60-%}
          00:00:00
        {%- else -%}
          {%- if days == 0 -%}
            00
          {%- endif -%}
          {%- if days > 0 -%}        
            {%- if days < 10 -%}
              0{{ days }}
            {%- else -%}
              {{ days }}
            {%- endif -%}
          {%- endif -%}
          {%- if hours == 0 -%}
            :00
          {%- endif -%}
          {%- if hours > 0 -%}        
            {%- if hours < 10 -%}
              :0{{ hours }}
            {%- else -%}
              :{{ hours }}
            {%- endif -%}
          {%- endif -%}
          {%- if minutes == 0 -%}
            :00
          {%- endif -%}
          {%- if minutes > 0 -%}
            {%- if minutes < 10 -%}
              :0{{ minutes }}
            {%- else -%}
              :{{ minutes }}
            {%- endif -%}
          {%- endif -%}
        {%- endif -%}

  - platform: snmp
    host: !secret core_router_ip
    baseoid: .1.3.6.1.2.1.25.1.1.0
    name: "Core Router Uptime"
    value_template: >-
      {% set time = (value | int(none)) | int(none) %}
      {% set minutes = ((time % 360000) / 6000) | int(none)%}
      {% set hours = ((time % 8640000) / 360000) | int(none) %}
      {% set days = (time / 8640000) | int(none) %}
        {%- if time < 60-%}
          00:00:00
        {%- else -%}
          {%- if days == 0 -%}
            00
          {%- endif -%}
          {%- if days > 0 -%}        
            {%- if days < 10 -%}
              0{{ days }}
            {%- else -%}
              {{ days }}
            {%- endif -%}
          {%- endif -%}
          {%- if hours == 0 -%}
            :00
          {%- endif -%}
          {%- if hours > 0 -%}        
            {%- if hours < 10 -%}
              :0{{ hours }}
            {%- else -%}
              :{{ hours }}
            {%- endif -%}
          {%- endif -%}
          {%- if minutes == 0 -%}
            :00
          {%- endif -%}
          {%- if minutes > 0 -%}
            {%- if minutes < 10 -%}
              :0{{ minutes }}
            {%- else -%}
              :{{ minutes }}
            {%- endif -%}
          {%- endif -%}
        {%- endif -%}

  ####################################################
  #                                                  #
  #             Sensor - System Monitor              #
  #                                                  #
  ####################################################

  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: "/"
      - type: memory_use_percent
      - type: processor_use
      - type: last_boot

  ####################################################
  #                                                  #
  #               Sensor - Derivative                #
  #                                                  #
  ####################################################

  - platform: derivative
    source: sensor.erl_wan_in
    unit_time: s
    unit: B
    name: erl_wan_in_derivative 

  - platform: derivative
    source: sensor.erl_wan_out
    unit_time: s
    unit: B
    name: erl_wan_out_derivative 

  #################################################################
  #                                                               #
  #                       Template Sensors                        #
  #                                                               #
  #################################################################

  - platform: template
    sensors:
      wan_in_mbps:
        unique_id: 6728fa46-ed71-4016-a7a8-d95e77235fdc
        value_template:  "{{ [((states('sensor.erl_wan_in_derivative')|float(none)*8)/1000000)|round(2, default=none),0]|max }}"
        unit_of_measurement: 'Mbps'
        friendly_name: WAN In
    
      wan_out_mbps:
        unique_id: 14134f47-7e71-4321-bec3-3526a450fa04
        value_template:  "{{ [((states('sensor.erl_wan_out_derivative')|float(none)*8)/1000000)|round(2, default=none),0]|max }}"
        unit_of_measurement: 'Mbps'
        friendly_name: WAN Out

      wan_download_gb:
        unique_id: 059b60a4-b193-469b-880e-e4b2d03ac327
        value_template:  "{{ (states('sensor.erl_wan_in')|float(none)/1000000000)|round(2, default=none) }}"
        unit_of_measurement: 'GB'
        friendly_name: WAN Download
    
      wan_upload_gb:
        unique_id: 69285b44-7008-4ded-b4ef-dd29de3dd1f5
        value_template:  "{{ (states('sensor.erl_wan_out')|float(none)/1000000000)|round(2, default=none) }}"
        unit_of_measurement: 'GB'
        friendly_name: WAN Upload

      wan_ping:
        unique_id: cac7f6bc-4985-4e47-a03a-31f4997286f9
        friendly_name: "WAN Ping"
        value_template: "{{ state_attr('binary_sensor.wan_ping', 'round_trip_time_avg') | round(2, default=none) }}"
        unit_of_measurement: "ms"

      sensor_count:
        unique_id: f799fe61-0953-44b1-8bf8-7b5c1b0bc953
        friendly_name: "Number of Sensors"
        value_template: >
          {%- set domains = ['sensor'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      automation_count:
        unique_id: 594410eb-1b4b-4f35-9e2d-efc0fa1ba540
        friendly_name: "Number of Automations"
        value_template: >
          {%- set domains = ['automation'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      script_count:
        unique_id: f612fb24-7c7e-4519-a2b4-b261a22e1cea
        friendly_name: "Number of Scripts"
        value_template: >
          {%- set domains = ['script'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      switch_count:
        unique_id: a61b2dcc-284b-47c6-939d-ed5ad7fc6588
        friendly_name: "Number of Switches"
        value_template: >
          {%- set domains = ['switch'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      binary_sensor_count:
        unique_id: 1f3cbb9d-9d41-4513-a6a9-3845781f5c89
        friendly_name: "Number of Binary Sensors"
        value_template: >
          {%- set domains = ['binary_sensor'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      lights_count:
        unique_id: bc6be24f-5187-4b9d-80d2-f0866cd54ee9
        friendly_name: "Number of Lights"
        value_template: >
          {%- set domains = ['light'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      tracker_count:
        unique_id: a094ca92-d82d-4a76-9094-d3235dcc4e39
        friendly_name: "Number of Devices"
        value_template: >
          {%- set domains = ['device_tracker'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      camera_count:
        unique_id: 01057f73-1a3d-452c-841a-75a699a4b6aa
        friendly_name: "Number of Devices"
        value_template: >
          {%- set domains = ['camera'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      fan_count:
        unique_id: bb3bb5c8-8c3d-4678-ae84-074fc32f9aa1
        friendly_name: "Number of Devices"
        value_template: >
          {%- set domains = ['fan'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      media_player_count:
        unique_id: 947d9cb4-b1a3-4d62-a50d-22df2dead053
        friendly_name: "Number of Devices"
        value_template: >
          {%- set domains = ['media_player'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      automation_count_high:
        unique_id: 8db4b16f-4c7f-42d5-8cfa-531908be5cb2
        friendly_name: "Automation Count High Limit"
        value_template: "{{ states('input_number.automation_count_expected') |int(none) + 150 }}"

      automation_count_low:
        unique_id: 9da7266a-c795-476a-96c6-7a285768741c
        friendly_name: "Automation Count Low Limit"
        value_template: "{{ states('input_number.automation_count_expected') |int(none) - 1 }}"

      binary_sensor_count_high:
        unique_id: 6c54a243-4d65-41cc-ad4e-90669edac72c
        friendly_name: "Binary Sensor Count High Limit"
        value_template: "{{ states('input_number.binary_sensor_count_expected') |int(none) + 150 }}"

      binary_sensor_count_low:
        unique_id: 0bd14287-a905-4eba-b4d4-f098b400dcc9
        friendly_name: "Binary Sensor Count Low Limit"
        value_template: "{{ states('input_number.binary_sensor_count_expected') |int(none) - 1 }}"

      switch_count_high:
        unique_id: b203b720-913a-48a4-a2be-df9a76b49f32
        friendly_name: "Switch Count High Limit"
        value_template: "{{ states('input_number.switch_count_expected') |int(none) + 150 }}"

      switch_count_low:
        unique_id: e8e00e43-1e7b-4642-8401-bd4d562bf8cc
        friendly_name: "Switch Count Low Limit"
        value_template: "{{ states('input_number.switch_count_expected') |int(none) - 1 }}"

      fan_count_high:
        unique_id: 72c4fe94-fc43-4fd2-998d-cb560519b5c0
        friendly_name: "Fan Count High Limit"
        value_template: "{{ states('input_number.fan_count_expected') |int(none) + 150 }}"

      fan_count_low:
        unique_id: 1091c755-d305-4315-aa63-b44cc271b6b8
        friendly_name: "Fan Count Low Limit"
        value_template: "{{ states('input_number.fan_count_expected') |int(none) - 1 }}"

      light_count_high:
        unique_id: ba97f118-80f0-45a0-a37b-e2ebda51305a
        friendly_name: "Light Count High Limit"
        value_template: "{{ states('input_number.light_count_expected') |int(none) + 150 }}"

      light_count_low:
        unique_id: 6fe2a57f-509a-4171-bfa9-43448e4f7b44
        friendly_name: "Light Count Low Limit"
        value_template: "{{ states('input_number.light_count_expected') |int(none) - 1 }}"

      tracked_device_count_high:
        unique_id: dec3e884-2f6d-4cbe-91e9-d2113ef65030
        friendly_name: "Tracked Device Count High Limit"
        value_template: "{{ states('input_number.tracked_device_count_expected') |int(none) + 150 }}"

      tracked_device_count_low:
        unique_id: 32ee1865-37d5-479b-b2a5-03db540ff7a0
        friendly_name: "Tracked Device Count Low Limit"
        value_template: "{{ states('input_number.tracked_device_count_expected') |int(none) - 1 }}"

      media_player_count_high:
        unique_id: 8eda1888-0d54-48ca-b0d4-6575cec8f9d6
        friendly_name: "Media Player Count High Limit"
        value_template: "{{ states('input_number.media_player_count_expected') |int(none) + 150 }}"

      media_player_count_low:
        unique_id: 71925d21-e6be-4aa7-af81-dd85021fdf4c
        friendly_name: "Media Player Count Low Limit"
        value_template: "{{ states('input_number.media_player_count_expected') |int(none) - 1 }}"

      script_count_high:
        unique_id: 6c83621b-6004-4a8d-83c1-9f784fd31cf8
        friendly_name: "Script Count High Limit"
        value_template: "{{ states('input_number.script_count_expected') |int(none) + 150 }}"

      script_count_low:
        unique_id: 03e049ea-4d2c-4d23-84f5-3eff58c16490
        friendly_name: "Script Count Low Limit"
        value_template: "{{ states('input_number.script_count_expected') |int(none) - 1 }}"

      sensor_count_high:
        unique_id: 3a0e9b82-66e6-4f3d-ab3d-9cc5cd0142bc
        friendly_name: "Sensor Count High Limit"
        value_template: "{{ states('input_number.sensor_count_expected') |int(none) + 150 }}"

      sensor_count_low:
        unique_id: e18d1e3c-e922-47b3-96d7-7200ca76f144
        friendly_name: "Sensor Count Low Limit"
        value_template: "{{ states('input_number.sensor_count_expected') |int(none) - 1 }}"

      hass_uptime:
        unique_id: c299fdc7-0364-4d72-aa9d-8b2361880f9a
        friendly_name: Home Assistant Uptime
        value_template: >-
          {% set time = (as_timestamp(now(), none) - as_timestamp(states('sensor.time_online'), none)) / 60 | int(default=0) %}
            {% set minutes = ((time % 60) ) | int(none)%}
            {% set hours = ((time % 1440) / 60) | int(none) %}
            {% set days = (time / 1440) | int(none) %}
              {%- if time == 0 -%}
                00:00:00
              {%- else -%}
                {%- if days == 0 -%}
                  00
                {%- endif -%}
                {%- if days > 0 -%}        
                  {%- if days < 10 -%}
                    0{{ days }}
                  {%- else -%}
                    {{ days }}
                  {%- endif -%}
                {%- endif -%}
                {%- if hours == 0 -%}
                  :00
                {%- endif -%}
                {%- if hours > 0 -%}        
                  {%- if hours < 10 -%}
                    :0{{ hours }}
                  {%- else -%}
                    :{{ hours }}
                  {%- endif -%}
                {%- endif -%}
                {%- if minutes == 0 -%}
                  :00
                {%- endif -%}
                {%- if minutes > 0 -%}
                  {%- if minutes < 10 -%}
                    :0{{ minutes }}
                  {%- else -%}
                    :{{ minutes }}
                  {%- endif -%}
                {%- endif -%}
              {%- endif -%}

      hass_restart:
        unique_id: 65c28a38-c606-40c9-961c-5232f9b1ffea
        friendly_name: Home Assistant Restart Time
        value_template: >-
          {% set time = (as_timestamp(states('sensor.time_online'), none)) - (as_timestamp(states('sensor.ha_shutdown'), none)) | int(default=0) %}
            {% set seconds = ((time % 60) ) | int(none)%}
            {% set minutes = (time / 60) | int(none) %}
              {%- if time == 0 -%}
                00:00
              {%- else -%}
                {%- if minutes == 0 -%}
                  00
                {%- endif -%}
                {%- if minutes > 0 -%}        
                  {%- if minutes < 10 -%}
                    0{{ minutes }}
                  {%- else -%}
                    {{ minutes }}
                  {%- endif -%}
                {%- endif -%}
                {%- if seconds == 0 -%}
                  :00
                {%- endif -%}
                {%- if seconds > 0 -%}
                  {%- if seconds < 10 -%}
                    :0{{ seconds }}
                  {%- else -%}
                    :{{ seconds }}
                  {%- endif -%}
                {%- endif -%}
              {%- endif -%}

      office_ups_battery_health:
        unique_id: 61b76332-9f37-48f4-ba1d-dcf3fd66fb65
        friendly_name: Office UPS Battery Status
        value_template: >
          {% if is_state('sensor.office_ups_battery_status', '1') -%}
            Good
          {% elif  is_state('sensor.office_ups_battery_status', '2') -%}
            Replace
          {% else -%}
            Error
          {% endif -%}

      server_ups_battery_health:
        unique_id: 03e166ee-f39b-4668-83e2-913352c029a7
        friendly_name: Server UPS Battery Status
        value_template: >
          {% if is_state('sensor.server_ups_battery_status', '1') -%}
            Good
          {% elif  is_state('sensor.server_ups_battery_status', '2') -%}
            Replace
          {% else -%}
            Error
          {% endif -%}

      shack_ups_battery_health:
        unique_id: 897b0ca8-5ec6-4b1f-8e82-fed4379460b1
        friendly_name: Shack UPS Battery Status
        value_template: >
          {% if is_state('sensor.shack_ups_battery_status', '1') -%}
            Good
          {% elif  is_state('sensor.shack_ups_battery_status', '2') -%}
            Replace
          {% else -%}
            Error
          {% endif -%}

      office_ups_status:
        unique_id: 89310f89-0b95-4709-845d-8e1f4824d200
        friendly_name: Office UPS Operating Status
        value_template: >
          {% if is_state('device_tracker.office_ups', 'not_home') -%}
            Offline
          {% elif is_state('sensor.office_ups_battery_status', '2') -%}
            Battery Fail
          {% elif  states('sensor.office_ups_input_voltage') | int(none) > 100 -%}
            Utility
          {% elif  states('sensor.office_ups_input_voltage') | int(none) < 100 and states('sensor.office_ups_output_voltage') | int(none) > 100 -%}
            Battery
          {% else -%}
            Error
          {% endif -%}

      server_ups_status:
        unique_id: 375dd8a2-d38e-4662-9664-698a1003895b
        friendly_name: Server UPS Operating Status
        value_template: >
          {% if is_state('device_tracker.server_ups', 'not_home') -%}
            Offline
          {% elif is_state('sensor.server_ups_battery_status', '2') -%}
            Battery Fail
          {% elif  states('sensor.server_ups_input_voltage') | int(none) > 100 -%}
            Utility
          {% elif  states('sensor.server_ups_input_voltage') | int(none) < 100 and states('sensor.server_ups_output_voltage') | int(none) > 100 -%}
            Battery
          {% else -%}
            Error
          {% endif -%}

      shack_ups_status:
        unique_id: 9d1e4c97-a524-4978-955d-602d2a678737
        friendly_name: Shack UPS Operating Status
        value_template: >
          {% if is_state('device_tracker.shack_ups', 'not_home') -%}
            Offline
          {% elif is_state('sensor.shack_ups_battery_status', '2') -%}
            Battery Fail
          {% elif  states('sensor.shack_ups_input_voltage') | int(none) > 100 -%}
            Utility
          {% elif  states('sensor.shack_ups_input_voltage') | int(none) < 100 and states('sensor.server_ups_output_voltage') | int(none) > 100 -%}
            Battery
          {% else -%}
            Error
          {% endif -%}

  # Sensor to track available updates for supervisor & addons
command_line:
  - sensor:
      name: Supervisor updates
      command: 'curl http://supervisor/supervisor/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"newest_version":.data.version_latest,"current_version":.data.version,"update_available":.data.update_available,"addons":[.data.addons[] | select(.update_available)]}'''
      value_template: "{{ value_json.addons | length }}"
      unit_of_measurement: pending update(s)
      json_attributes:
        - update_available
        - newest_version
        - current_version
        - addons
mqtt:
  sensor:
    - state_topic: "hass/restart"
      unique_id: b6b52c5d-3e12-4808-a162-90502503a5b8
      name: "HA Shutdown"

    - name: Front Rooms AP Clients
      unique_id: 8bd8ba58-7c6e-4cdb-96fd-30b7c5b52e42
      state_topic: iap
      value_template: "{{value_json['front'].clients }}"

    - name: Front Rooms AP 5 channel
      unique_id: 41051dfa-aacb-41cc-a53e-2db2a87f25db
      state_topic: iap
      value_template: "{{value_json['front'].channel5 }}"

    - name: Front Rooms AP 2 channel
      unique_id: d9419090-d0ca-4b73-a9c8-454d35df829c
      state_topic: iap
      value_template: "{{value_json['front'].channel2 }}"

    - name: Den AP Clients
      unique_id: df7f8079-eabf-4a71-862d-90aaee04dd6d
      state_topic: iap
      value_template: "{{value_json['den'].clients }}"

    - name: Den AP 5 channel
      unique_id: 95004876-75e1-41f0-b0a6-267e5e675ffb
      state_topic: iap
      value_template: "{{value_json['den'].channel5 }}"

    - name: Den AP 2 channel
      unique_id: ad7070e8-e067-445e-860f-20a8e0e10324
      state_topic: iap
      value_template: "{{value_json['den'].channel2 }}"

    - name: Garage AP Clients
      unique_id: addafd69-7742-4087-bdd4-8bbd552b2cd0
      state_topic: iap
      value_template: "{{value_json['garage'].clients }}"

    - name: Garage AP 5 channel
      unique_id: fba6f014-e5a2-40d3-b335-a006f7b79f68
      state_topic: iap
      value_template: "{{value_json['garage'].channel5 }}"

    - name: Garage AP 2 channel
      unique_id: 90239dcd-4bb6-4ab1-95b5-4192aa51b83d
      state_topic: iap
      value_template: "{{value_json['garage'].channel2 }}"

    - name: Shed AP Clients
      unique_id: 7ac60d46-5e7f-471f-ae29-eead09546539
      state_topic: iap
      value_template: "{{value_json['shed'].clients }}"

    - name: Shed AP 5 channel
      unique_id: f2e3bf41-16ad-4de6-bd88-bbee71bec471
      state_topic: iap
      value_template: "{{value_json['shed'].channel5 }}"

    - name: Shed AP 2 channel
      unique_id: 4ded75ca-cc4a-4b02-acb0-be2e391e62a2
      state_topic: iap
      value_template: "{{value_json['shed'].channel2 }}"

####################################################
#                                                  #
#                  NUMERIC INPUT                   #
#                                                  #
####################################################
input_number:
  automation_count_expected:
    name: Expected Automations
    min: 0
    max: 5000
    mode: box

  binary_sensor_count_expected:
    name: Expected Binary Sensors
    min: 0
    max: 5000
    mode: box

  switch_count_expected:
    name: Expected Switches
    min: 0
    max: 5000
    mode: box

  fan_count_expected:
    name: Expected Fans
    min: 0
    max: 5000
    mode: box

  light_count_expected:
    name: Expected Lights
    min: 0
    max: 5000
    mode: box

  tracked_device_count_expected:
    name: Expected Tracked Devices
    min: 0
    max: 5000
    mode: box

  media_player_count_expected:
    name: Expected Media Players
    min: 0
    max: 5000
    mode: box

  script_count_expected:
    name: Expected Scripts
    min: 0
    max: 5000
    mode: box

  sensor_count_expected:
    name: Expected Sensors
    min: 0
    max: 5000
    mode: box

#################################################################
#                                                               #
#                         System Health                         #
#                                                               #
#################################################################

system_health:

#################################################################
#                                                               #
#                             Groups                            #
#                                                               #
#################################################################

group:
  leds:
    name: LED Controllers
    all: true
    entities:
      - device_tracker.den_1
      - device_tracker.gbath
      - device_tracker.kitchen_1
      - device_tracker.kitchen_2
      - device_tracker.kitchen_3
      - device_tracker.kitchen_4
      - device_tracker.kitchen_5
      - device_tracker.kitchen_6
      - device_tracker.kitchen_7
      - device_tracker.kitchen_8
      - device_tracker.mbath
      - device_tracker.mbed_1
      - device_tracker.mbed_2
      - device_tracker.shack

  blinds:
    name: Blind Controllers
    all: true
    entities:
      - device_tracker.den_c
      - device_tracker.den_l
      - device_tracker.den_r
      - device_tracker.guest
      - device_tracker.kitchen_e
      - device_tracker.kitchen_l
      - device_tracker.kitchen_r
      - device_tracker.master_c
      - device_tracker.master_l
      - device_tracker.master_r
      - device_tracker.master_w
      - device_tracker.office_c
      - device_tracker.office_l
      - device_tracker.office_r
      - device_tracker.shack_c
      - device_tracker.shack_l
      - device_tracker.shack_r
      - device_tracker.server

  docker:
    name: Docker
    all: true
    entities:
      - switch.frigate
      - switch.tv_headend
      - switch.eagle_mqtt

utility_meter:
  wan_in_monthly:
    source: sensor.wan_download_gb
    cycle: monthly 
    
  wan_in_daily:
    source: sensor.wan_download_gb
    cycle: daily
    
  wan_out_monthly:
    source: sensor.wan_upload_gb
    cycle: monthly 
    
  wan_out_daily:
    source: sensor.wan_upload_gb
    cycle: daily       