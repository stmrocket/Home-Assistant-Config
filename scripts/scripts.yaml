
reset_all_entity_counters:
  sequence:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.automation_count_expected
        value: "{{ states('sensor.automation_count') | float }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.binary_sensor_count_expected
        value: "{{ states('sensor.binary_sensor_count') | float }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.switch_count_expected
        value: "{{ states('sensor.switch_count') | float }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.fan_count_expected
        value: "{{ states('sensor.fan_count') | float }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.light_count_expected
        value: "{{ states('sensor.lights_count') | float }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.tracked_device_count_expected
        value: "{{ states('sensor.tracker_count') | float }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.media_player_count_expected
        value: "{{ states('sensor.media_player_count') | float }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.script_count_expected
        value: "{{ states('sensor.script_count') | float }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.sensor_count_expected
        value: "{{ states('sensor.sensor_count') | float }}"

litter_robot_empty:
  sequence:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.litter_robot_cycle_count
        value: "{{ states('input_number.litter_robot_cycle_count') | int + states('sensor.litter_robot_cycle_count') | int }}"        
    - service: input_number.increment
      entity_id: input_number.litter_robot_empty_count
    - service: mqtt.publish
      data_template:
        topic: "pooper/command/empty"
        payload: "{{ states('sensor.litter_robot_average_cycle_capacity') }}"